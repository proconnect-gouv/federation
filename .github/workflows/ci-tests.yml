name: ðŸ’š CI Tests

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  unit-shared:
    runs-on: ubuntu-24.04
    defaults:
      run:
        working-directory: ./shared
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: ./package.json

      - name: Cache Node.js dependencies
        id: shared-yarn-cache
        uses: actions/cache@v4
        with:
          path: ./node_modules
          key: ${{ runner.os }}-node-modules-shared-${{ hashFiles('./yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-shared-

      - name: Install dependencies
        if: steps.shared-yarn-cache.outputs.cache-hit != 'true'
        run: |
          yarn install

      - name: Run tests
        run: yarn test

  unit-exploitation:
    runs-on: ubuntu-24.04
    defaults:
      run:
        working-directory: ./fc-exploitation
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: ./package.json

      - name: Cache Node.js dependencies
        id: exploitation-yarn-cache
        uses: actions/cache@v4
        with:
          path: ./node_modules
          key: ${{ runner.os }}-node-modules-exploitation-${{ hashFiles('./yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-exploitation-

      - name: Install dependencies
        if: steps.exploitation-yarn-cache.outputs.cache-hit != 'true'
        run: |
          yarn install

      - name: Run tests
        run: yarn test

  snapshots:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up dockerx
        uses: docker/setup-buildx-action@v2

      - name: Set up Docker BuildKit
        run: |
          export DOCKER_BUILDKIT=1
          export COMPOSE_BAKE=true

      - name: Set up Node.js for federation-admin
        uses: actions/setup-node@v3
        with:
          node-version-file: ./package.json

      - name: Cache Node.js dependencies
        id: admin-yarn-cache
        uses: actions/cache@v4
        with:
          path: ./node_modules
          key: ${{ runner.os }}-node-modules-admin-${{ hashFiles('./yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-admin-

      - name: Install dependencies
        if: steps.exploitation-yarn-cache.outputs.cache-hit != 'true'
        run: |
          yarn install

      - name: Clone federation repository
        uses: actions/checkout@v4
        with:
          repository: proconnect-gouv/federation
          token: ${{ secrets.GITHUB_TOKEN }}
          path: ./federation

      - name: Set FEDERATION_ROOT environment variable
        working-directory: ./federation
        run: echo "FEDERATION_ROOT=$(pwd)" >> $GITHUB_ENV

      - name: Set ADMIN_ROOT environment variable
        working-directory: ./
        run: |
          echo "ADMIN_ROOT=$(pwd)" >> $GITHUB_ENV
          echo "PC_ROOT=$(pwd)" >> $GITHUB_ENV

      - name: Create symlinks in federation
        working-directory: ./federation/docker/volumes/src
        run: |
          ln -s "$FEDERATION_ROOT" federation
          ln -s "$ADMIN_ROOT" federation-admin

      - name: Start docker stack
        working-directory: federation/docker
        run: |
          set -x
          docker network create --driver bridge pc_public
          ./docker-stack prune-ci
          ./docker-stack up exploitation-fca-low
          ./docker-stack start-all
          ./docker-stack wait "exploitation-fca-low" "https://exploitation-fca-low.docker.dev-franceconnect.fr/login" "240"

      - name: Start tests
        working-directory: ./
        run: |
          yarn test:e2e:exploitation -c video=false

      - name: Post failing tests
        if: failure()
        run: |
          mkdir -p federation-admin/cypress/logs
          docker cp pc-exploitation-1:/tmp/.pm2/logs federation-admin/cypress/logs/fc-exploitation || true
          docker cp pc-rp-all:/var/log/nginx fc-exploitation/cypress/logs || true
