name: üê≥ Register

on:
  push:

jobs:
  register_instances:
    name: üê≥ Register core-fca-low
    if: github.actor != 'dependabot[bot]'
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/${{ matrix.instance }}
          tags: |
            type=sha,format=long,prefix=
            type=ref,event=branch
            type=ref,event=tag
          flavor: |
            latest=${{ github.ref == 'refs/heads/master' }}

      - name: Checkout
        uses: actions/checkout@v4

      - name: Mount Cache
        uses: actions/cache@v3
        id: cache
        with:
          path: |
            usr-local-share-cache-yarn
          key: instance-mount-cache-${{ hashFiles('back/Dockerfile') }}
      - name: Inject cache into docker
        uses: reproducible-containers/buildkit-cache-dance@v3.1.0
        with:
          cache-map: |
            {
              "usr-local-share-cache-yarn": "/usr/local/share/.cache/yarn"
            }
          skip-extraction: ${{ steps.cache.outputs.cache-hit }}

      - name: Build image
        uses: docker/build-push-action@v6
        with:
          build-args: |
            SOURCE_COMMIT=${{ github.sha }}
            APP=${{ matrix.app }}
            INSTANCE=${{ matrix.instance }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: ./back
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
    strategy:
      matrix:
        include:
          - app: core-fca
            instance: core-fca-low
