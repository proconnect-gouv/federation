import { IdentityProvider, IdentityProviderConfig } from '../../common/types';

export const getIdentityProviderConfig = (
  idpConfigs: IdentityProviderConfig[],
  configName: string,
): IdentityProviderConfig => {
  const config = idpConfigs[configName];
  expect(config, `no config value for ${configName}`).to.exist;
  return config;
};

export const getIdentityProviderFromConfig = (
  idpConfig: IdentityProviderConfig,
): IdentityProvider => {
  const identityProvider: IdentityProvider = {
    acrValue: `eidas${idpConfig.eidas}`,
    descriptions: [idpConfig.title],
    encryption: '',
    idpId: idpConfig.uid,
    mocked: true,
    name: idpConfig.name,
    selectors: {
      loginButton: "[type='submit']",
      password: "input[name='password']",
      username: "input[name='login']",
    },
    signature: '',
    title: idpConfig.title,
    url: idpConfig.issuer,
    usable: true,
  };

  return identityProvider;
};
