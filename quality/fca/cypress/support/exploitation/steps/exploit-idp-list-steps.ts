import { Then, When } from '@badeball/cypress-cucumber-preprocessor';

import ExploitIdpListPage from '../pages/exploit-idp-list-page';

const exploitIdpListPage = new ExploitIdpListPage();

When('je clique sur le bouton de création de FI', function () {
  exploitIdpListPage.getCreateIdpButton().click();
});

When(
  'je clique sur le bouton de modification du FI {string}',
  function (idpName: string) {
    // Keep track of the idp id
    exploitIdpListPage
      .getIdpUid(idpName)
      .then((idpId) => (this.idpConfig.uid = idpId));

    exploitIdpListPage.navigateToUpdateIdpPage(idpName);
  },
);

When(
  /^je supprime le fournisseur d'identité "([^"]*)"$/,
  function (idpName: string) {
    exploitIdpListPage.deleteIdp(idpName, this.operatorUser);
  },
);

When(
  /^je supprime les fournisseurs d'identité commençant par "([^"]*)"$/,
  function (idpNamePrefix: string) {
    exploitIdpListPage.deleteAllIdpStartingWith(
      idpNamePrefix,
      this.operatorUser,
    );
  },
);

Then('le message de confirmation de création de FI est affiché', function () {
  // Retrieve the IDP name from the configuration used for the creation
  const { name: idpName } = this.idpConfig;
  exploitIdpListPage.checkConfirmCreateMessage(idpName);
});

Then(
  'le message de confirmation de modification du FI {string} est affiché',
  function (idpName: string) {
    exploitIdpListPage.checkConfirmUpdateMessage(idpName);
  },
);

Then(
  'le message de confirmation de suppression du FI {string} est affiché',
  function (idpName: string) {
    exploitIdpListPage.checkConfirmDeleteMessage(idpName);
  },
);
