####################
####################
services:
  ####################
  # Base Services
  ####################

  base-nodejs:
    build:
      context: '../../../back'
      target: dev
    user: ${CURRENT_UID}
    tty: true
    networks:
      - fc
      - public
      - data
    init: true

  init-core:
    build:
      context: '../../../back'
      target: migrator
    working_dir: /var/www/app
    user: ${CURRENT_UID}
    depends_on:
      mongo-fca-low:
        condition: service_started
    volumes:
      - '../../../back:/build/back:ro'
      - '../../volumes/app:/opt/scripts'
      - '../../volumes/log:/var/log/app'
      - '../../volumes/.home:/home'
      - '../../volumes/ssl:/etc/ssl/docker_host:ro'
    env_file:
      - '../shared/.env/base-app.env'
    environment:
      - NODE_OPTIONS=--experimental-strip-types
    tty: true
    networks:
      - data
    command: 'yarn run migrate up'

  base-core:
    extends: base-nodejs
    depends_on:
      rp-all:
        condition: service_started
      mongo-fca-low:
        condition: service_healthy
      redis-pwd:
        condition: service_healthy
    volumes:
      - '../../../back/apps:/var/www/app/apps:ro'
      - '../../../back/libs:/var/www/app/libs:ro'
      - '../../volumes/app:/opt/scripts'
      - '../../volumes/log:/var/log/app'
      - '../../volumes/.home:/home'
      - '../../volumes/ssl:/etc/ssl/docker_host:ro'
    tmpfs:
      - /var/www/app/dist:mode=777
    networks:
      - fc
      - public
      - data

  base-mock:
    build:
      context: '../../../back'
      target: dev
    user: ${CURRENT_UID}
    depends_on:
      rp-all:
        condition: service_started
    tty: true
    init: true
    volumes:
      - '../../../back/apps:/var/www/app/apps:ro'
      - '../../../back/libs:/var/www/app/libs:ro'
    tmpfs:
      - /var/www/app/dist:mode=777

  base-sp-mock:
    extends: base-mock
    volumes:
      - '../../volumes/app:/opt/scripts'
      - '../../volumes/log/:/var/log/app'
      - '../../volumes/.home:/home'
      - '../../volumes/ssl:/etc/ssl/docker_host:ro'
    depends_on:
      rp-all:
        condition: service_started
      redis-pwd:
        condition: service_healthy
    networks:
      - public
      - data

  base-idp-mock:
    extends: base-mock
    volumes:
      - '../../volumes/app:/opt/scripts'
      - '../../volumes/fca-low/mocks/idp/databases:/var/databases'
      - '../../volumes/log/:/var/log/app'
      - '../../volumes/.home:/home'
      - '../../volumes/ssl:/etc/ssl/docker_host:ro'
    depends_on:
      rp-all:
        condition: service_started
      redis-pwd:
        condition: service_healthy
    networks:
      - public
      - data

  base-dp-mock:
    extends: base-mock
    volumes:
      - '../../volumes/app:/opt/scripts'
      - '../../volumes/log:/var/log/app'
      - '../../volumes/.home:/home'
      - '../../volumes/ssl:/etc/ssl/docker_host:ro'
    depends_on:
      rp-all:
        condition: service_started
    networks:
      - public

  base-redis:
    image: 'bitnamilegacy/redis:6.0.15'
    env_file:
      - ../shared/.env/redis.env
    volumes:
      - '../../volumes/ssl:/bitnami/redis/data/ssl'
    healthcheck:
      interval: 2s
      start_period: 5s
    networks:
      - data

  ####################
  # Shared Services
  ####################

  rp-all:
    image: nginx:1.27.3
    container_name: pc-rp-all
    environment:
      DHPARAM_GENERATION: 'false'
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ../../volumes/nginx-proxy/nginx.conf:/etc/nginx/nginx.conf:ro
      - ../../volumes/nginx-proxy/etc:/etc/nginx/conf.d:ro
      - ../../volumes/nginx-proxy/includes:/etc/nginx/includes:ro
      - ../../volumes/nginx-proxy/public:/var/www:ro
      - ../../volumes/nginx-proxy/default-vhost:/etc/nginx/html:ro
      - ../../volumes/ssl:/etc/nginx/docker_host:ro
      - ../../volumes/ssl:/etc/nginx/client_certs:ro
      - ../../volumes/log/nginx:/var/log/nginx
    networks:
      public:
        aliases:
          # FCA LOW
          - core-fca-low.docker.dev-franceconnect.fr
          - bridge-proxy-rie.docker.dev-franceconnect.fr
          - fca-low-front.docker.dev-franceconnect.fr
          - fsa1-low.docker.dev-franceconnect.fr
          - fsa2-low.docker.dev-franceconnect.fr
          - fsa3-low.docker.dev-franceconnect.fr
          - fsa4-low.docker.dev-franceconnect.fr
          - fia1-low.docker.dev-franceconnect.fr
          - fia2-low.docker.dev-franceconnect.fr
          - moncomptepro.docker.dev-franceconnect.fr
          # Aliases to access exploitation from test runner
          # TODO: Move those aliases to exploitation network once runner workaround found
          - exploitation-fca-low.docker.dev-franceconnect.fr
          - exploitation-high.docker.dev-franceconnect.fr
          # Mock Data Provider
          - dpa1-low.docker.dev-franceconnect.fr
          - dpa2-low.docker.dev-franceconnect.fr
          # Generic
          - docker.dev-franceconnect.fr
      fc:
      rie:
        aliases:
          - auth.llng.docker.dev-franceconnect.fr
          - fia-rie-low.docker.dev-franceconnect.fr
      exploitation:

  squid:
    image: ubuntu/squid:6.6-24.04_beta
    ulimits:
      nofile:
        soft: 1048576
        hard: 1048576
    extra_hosts:
      - auth.llng.docker.dev-franceconnect.fr:172.16.1.254
      - fia-rie-low.docker.dev-franceconnect.fr:172.16.1.254
    networks:
      - public
      - fc
      - exploitation
      - rie
    healthcheck:
      test: ['CMD', 'bash', '-c', 'echo >/dev/tcp/localhost/3128 || exit 1']
      interval: 1s
      timeout: 1s
      retries: 2
      start_period: 1s

  broker:
    build:
      context: '../..'
      dockerfile: 'builds/broker/Dockerfile'
    # Specify hostname to fix cluster name
    hostname: broker
    networks:
      - data
    ports:
      - '5672:5672'
      - '15672:15672'

  ####################
  # Data storage
  ####################

  redis-pwd:
    extends: base-redis
    environment:
      - REDIS_TLS_CERT_FILE=/bitnami/redis/data/ssl/redis-pwd.crt
      - REDIS_TLS_KEY_FILE=/bitnami/redis/data/ssl/redis-pwd.key
    healthcheck:
      test: redis-cli -a $${REDIS_PASSWORD} --tls --cacert $${REDIS_TLS_CA_FILE} role | grep master
    networks:
      rie:
      data:
        ipv4_address: 172.16.4.105

  postgres:
    image: postgres:13-bullseye
    volumes:
      - '../../volumes/postgres/init-multiple-postgresql-databases.sh:/docker-entrypoint-initdb.d/init-multiple-postgresql-databases.sh:ro'
      - '../../volumes/postgres/start.sh:/usr/bin/start.sh:ro'
      - '../../volumes/postgres/postgresql.conf:/etc/postgresql/postgresql.conf'
      - '../../volumes/postgres/pg_hba.conf:/etc/postgresql/pg_hba.conf'
      - ../../volumes/ssl:/etc/ssl/docker_host:ro
    env_file:
      - '../shared/.env/postgres/base.env'
      - '../shared/.env/postgres/databases.env'
    command: ['start.sh']
    ports:
      - '5432:5432'
    networks:
      - data

  ####################
  # Shared Mocks
  ####################

  openldap:
    image: osixia/openldap:1.5.0
    networks:
      - rie
    ports:
      - '5432:5432'

  maildev:
    hostname: maildev
    image: maildev/maildev:2.0.5
    networks:
      - data
      - public

####################
# Networks
####################

networks:
  public:
    ipam:
      config:
        - subnet: 172.16.1.0/24
  fc:
    ipam:
      config:
        - subnet: 172.16.2.0/24
  exploitation:
    ipam:
      config:
        - subnet: 172.16.3.0/24
  data:
    ipam:
      config:
        - subnet: 172.16.4.0/24
  rie:
    ipam:
      config:
        - subnet: 172.16.6.0/24
