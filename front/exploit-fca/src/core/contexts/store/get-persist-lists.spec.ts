import mockStates from '../../../configs/states';
import getPersistLists from './get-persist-lists';

jest.mock('../../../configs/states');
jest.mock('redux-persist/lib/storage');

describe('getPersistLists', () => {
  beforeEach(() => {});

  it('should return a redux-persist configuration object, using default persist storage', () => {
    // when
    const result = getPersistLists(mockStates);
    // then
    expect(result).toStrictEqual({
      blacklist: ['mockState1', 'mockState2'],
      whitelist: ['mockState3'],
    });
  });

  it('should return a redux-persist configuration object, using custom persist storage', () => {
    // when
    const result = getPersistLists(mockStates);
    // then
    expect(result).toStrictEqual({
      blacklist: ['mockState1', 'mockState2'],
      whitelist: ['mockState3'],
    });
  });

  // it('should not throw if blacklist is not defined', () => {
  //   // then
  //   expect(() => {
  //     getPersistLists({
  //       ...mockStates,
  //       erroredState: { defaultValue: 'without blacklist property' },
  //     });
  //   }).not.toThrow();
  // });
});
