import { RouteItem } from '../../interfaces';
import { HOMEPAGE_PATH, NOTFOUND_PATH } from './constants';
import sortRouteByPathDesc from './sort-route-by-path';

export const checkIsPagePath = (current: string, expected: string): void => {
  const isExpectPath = current === expected;
  if (!isExpectPath) {
    const msg = `Page path is not valid, expected '${expected}' got '${current}'`;
    throw new Error(msg);
  }
};

const concatApplicationRoutes = (
  page404: RouteItem,
  homepage: RouteItem,
  pages: RouteItem[],
): RouteItem[] => {
  checkIsPagePath(page404.path, NOTFOUND_PATH);
  checkIsPagePath(homepage.path, HOMEPAGE_PATH);
  const result = [...pages].sort(sortRouteByPathDesc);
  // !!! Home Page
  // Doit toujours être l'avant dernière
  // avant la page 404, ou dernière si pas de page 404
  // pour la résolution des chemins de routes par le router
  result.push(homepage);
  // !!! La page 404
  // doit toujours être la dernière dans la stack des routes
  // pour la résolution des chemins de routes par le swicth du router
  result.push(page404);
  return result;
};

export default concatApplicationRoutes;
