<%
const hasParams = !!locals.params;
const isError = !!locals.exception;

const isOidcClientSession = !!(locals.session && locals.session.OidcClient);

const label = hasParams
  ? locals.spName
  : isOidcClientSession && locals.session.OidcClient.spName || undefined;

const urlBase = hasParams
  ? locals.params.redirect_uri
  : '/api/v2/redirect-to-sp-with-error';


let error = 'access_denied';
let error_description = encodeURIComponent("User auth aborted");

if (isError && locals.exception?.constructor) {
  error = locals.exception.constructor.ERROR;
  error_description = locals.exception.constructor.ERROR_DESCRIPTION;
}


const state = hasParams
  ? locals.params.state
  : undefined;

const params = {
  error,
  error_description,
  state
};

const urlParams = Object.entries(params)
  .filter(([,value]) => !!value)
  .map(([key,value]) => `${key}=${value}`)
  .join('&');
%>
<% if (!!label) { %>

<a
  data-testid="back-to-sp-link"
  href="<%= urlBase %>?<%= urlParams %>"
  class="fr-btn fr-btn--tertiary-no-outline fr-btn--icon-left fr-icon-arrow-go-back-fill"
>
  Revenir sur <%= label %>
</a>
<% } %>
