<%
const hasParams = !!locals.params;
const isError = !!locals.exception;

const label = hasParams
  ? locals.spName
  : $session('OidcClient.spName');

const urlBase = hasParams
  ? locals.params.redirect_uri
  : '/api/v2/redirect-to-sp-with-error';


let error = 'access_denied';
let error_description = encodeURIComponent("User auth aborted");

if (isError && locals.exception?.constructor) {
  error = locals.exception.constructor.ERROR;
  error_description = locals.exception.constructor.ERROR_DESCRIPTION;
}


const state = hasParams
  ? locals.params.state
  : $session('OidcClient.spState');

const redirect_uri = $session('OidcClient.spRedirectUri');

const params = {
  error,
  error_description,
  state,
  redirect_uri,
};

const urlParams = Object.entries(params)
  .filter(([,value]) => !!value)
  .map(([key,value]) => `${key}=${value}`)
  .join('&');
%>

<% if (Boolean(label)) { %>

<a
  data-testid="back-to-sp-link"
  href="<%= urlBase %>?<%= urlParams %>"
  class="fr-btn fr-btn--tertiary-no-outline fr-btn--icon-left fr-icon-arrow-go-back-fill"
>
  <%= $translate('nav.back_to_provider', { spName: label }) %>
</a>
<% } %>
