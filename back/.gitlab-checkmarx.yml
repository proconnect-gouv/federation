#
# This version is a modified version of the Checkmarx's original version.
#
# The original version can be found here: https://raw.githubusercontent.com/checkmarx-ltd/cx-flow/master/templates/gitlab/v2/Checkmarx.gitlab-ci.yml
#

variables:
    CHECKMARX_DOCKER_IMAGE: "cx-flow:57d4c6c"     # TODO : utilisation d'une image spécifique liée au bug https://github.com/checkmarx-ltd/cx-flow/issues/655
                                                  # A remplacer par une image "latest"

    CX_FLOW_BUG_TRACKER: "GitLab"                                  # Beware camelcase 'L' in GitLab if modified
    CX_FLOW_BUG_TRACKER_IMPL: ${CX_FLOW_BUG_TRACKER}
    CX_FLOW_EXE: "java -jar /app/cx-flow.jar"
    CX_PROJECT: "FranceConnect-fcv2"
    CHECKMARX_VERSION: "9.3"                                       # Modified
    CHECKMARX_SETTINGS_OVERRIDE: "false"
    CHECKMARX_EXCLUDE_FILES: ""                                    # Tested with no success. It was NOT taken into account
    CHECKMARX_EXCLUDE_FOLDERS: ""                                  # Tested with no success. It was NOT taken into account
    CHECKMARX_CONFIGURATION: "Default Configuration"
    CHECKMARX_SCAN_PRESET: "Checkmarx Default"
    CX_FLOW_FILTER_SEVERITY: "Medium"                              # To configure if needed, level to create issues on GitLab
    CX_FLOW_FILTER_CATEGORY: ""
    CX_FLOW_FILTER_CWE: ""
    CX_FLOW_FILTER_STATUS: ""
    CX_FLOW_FILTER_STATE: ""
    CX_FLOW_ENABLED_VULNERABILITY_SCANNERS: sast
    CX_TEAM: "CxServer"                                             # Modified
    CX_FLOW_BREAK_BUILD: "false"
    SCA_FILTER_SEVERITY: ""
    SCA_FILTER_SCORE: ""
    SCA_THRESHOLDS_SCORE: ""
    SCA_TEAM: ""
    GITLAB_BLOCK_MERGE: "false"
    GITLAB_ERROR_MERGE: "false"
    # The exclude file/folders must be written as regexp as they are interpreted by Java.

    PARAMS: --gitlab.api-url=https://gitlab.dev-franceconnect.fr/api/v4/ --cx-flow.zip-exclude=\.git/.*,/docker/.*,.*/cypress/.*,.*\.spec\.ts


#
#         The "checkmarx-scan" service creates issues on gitlab after a scan, reporting errors found based on the severity level.
#         
#         The commented code is kept here as this feature might be used in the future.
#

# checkmarx-scan:
#   stage: Checkmarx
#   tags:
#     - checkmarx
#   rules:
#     - if: '$CX_FLOW_BUG_TRACKER != "GitLabDashboard" && $CI_COMMIT_BRANCH == "master"'
#   image:
#     name: checkmarx/${CHECKMARX_DOCKER_IMAGE}
#     entrypoint: ['']
#   variables:
#     CHECKMARX_INCREMENTAL: "false"
#   script:
#     - ${CX_FLOW_EXE}
#           --scan 
#           --app="${CI_PROJECT_NAME}" 
#           --namespace="${CI_PROJECT_NAMESPACE}" 
#           --repo-name="${CI_PROJECT_NAME}" 
#           --repo-url="${CI_REPOSITORY_URL}" 
#           --cx-team="${CX_TEAM}" 
#           --cx-project="${CX_PROJECT}" 
#           --branch="${CI_COMMIT_BRANCH}"
#           --spring.profiles.active="${CX_FLOW_ENABLED_VULNERABILITY_SCANNERS}" 
#           --f=. 
#           ${PARAMS}



#
#         The "checkmarx-scan-mr" service sends a report on the MR on gitlab after a scan.
#

checkmarx-scan-mr:
  stage: Checkmarx
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      allow_failure: true
  tags:
    - checkmarx
  image:   
    name: checkmarx/${CHECKMARX_DOCKER_IMAGE}
    entrypoint: ['']
  variables:
    CHECKMARX_INCREMENTAL: "true"
  script:
    - ${CX_FLOW_EXE}
          --scan 
          --bug-tracker="GITLABMERGE"
          --app="${CI_PROJECT_NAME}" 
          --namespace="${CI_PROJECT_NAMESPACE}"
          --repo-name="${CI_PROJECT_NAME}"
          --repo-url="${CI_REPOSITORY_URL}" 
          --cx-team="${CX_TEAM}" 
          --cx-project="${CX_PROJECT}" 
          --branch="${CI_MERGE_REQUEST_SOURCE_BRANCH_NAME}" 
          --project-id="${CI_PROJECT_ID}" 
          --merge-id="${CI_MERGE_REQUEST_IID}" 
          --spring.profiles.active="${CX_FLOW_ENABLED_VULNERABILITY_SCANNERS}" 
          --f=. 
          ${PARAMS}
