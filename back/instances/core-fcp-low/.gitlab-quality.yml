quality-fcp-low-docker:
  stage: 'End to end'
  image: ${E2E_DOCKER_IMAGE}
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" || $CI_COMMIT_BRANCH == "staging"'
  tags:
    - cypress
  variables:
    TZ: 'Europe/Paris'
  cache:
    key: ${ CACHE_KEY }
    policy: pull
    paths:
      # Back
      - back/node_modules/
      # Front
      - front/node_modules/
      - front/apps/agent-connect/node_modules/
      - front/apps/exploit-fca-low/node_modules/
      - front/apps/exploit-fcp-high/node_modules/
      - front/apps/partners-fca/node_modules/
      - front/apps/partners-fcp/node_modules/
      - front/apps/user-dashboard/node_modules/
      # Quality
      - quality/node_modules/
      # Cypress
      - $CYPRESS_CACHE_FOLDER
  before_script:
    - if [ "$(docker ps -aq --filter name=^fc |wc -l) -ge 1" ]; then docker container rm -f $(docker ps -aq --filter name=^fc) || true; docker volume prune -f; fi
    - shopt -s expand_aliases
    - alias docker-stack=$FC_ROOT/fc/docker/docker-stack
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - if [[ ! -d $FC_ROOT/mocks ]]; then cp -R /var/www/mocks $FC_ROOT/; fi
    - ln -s $CI_PROJECT_DIR $FC_ROOT/fc/docker/volumes/src/fc
    - for mock in `find $FC_ROOT/mocks -maxdepth 1 -mindepth 1 -type d`; do cd $mock && git fetch && git checkout -f origin/master && git clean -df && echo "Installing depedencies for $(/usr/bin/basename $mock)" && npm install; ln -sfn $mock $FC_ROOT/fc/docker/volumes/src; done
    - cd $CI_PROJECT_DIR/quality/fcp && yarn install
    - cd $CI_PROJECT_DIR
  script:
    - docker-stack up all-fcp-low
    - docker exec fc_core-fcp-low_1 bash -c "yarn config set proxy $PROXY_EXPLOITATION && yarn config set https-proxy $PROXY_EXPLOITATION"
    - docker-stack dep core-fcp-low
    - docker-stack start rnipp fsp1-low fsp2-low fip1-low fip2-low fip3-low core-fcp-low
    # Starting Cypress
    - timeout 60 bash -c 'while [[ "$(curl --insecure -s -o /dev/null -w ''%{http_code}'' https://core-fcp-low.docker.dev-franceconnect.fr/api/v2/.well-known/openid-configuration)" != "200" ]];
      do echo "Waiting for core-fcp-low..." && sleep 10; done' || (
      (echo 'Cannot connect to core-fcp-low') &&
      (docker exec fc_core-fcp-low_1 cat /tmp/.pm2/logs/core-fcp-low-error-0.log || true) &&
      (docker exec fc_core-fcp-low_1 cat /tmp/.pm2/logs/core-fcp-low-out-0.log || true) &&
      exit 1)
    - cd $CI_PROJECT_DIR/quality/fcp
    - CYPRESS_TEST_ENV=docker yarn test:low:ci -c video=${CYPRESS_VIDEO} || RETURN_CODE=1
    - yarn report:prepare
    - CYPRESS_PLATFORM=fcp-low CYPRESS_TEST_ENV=docker yarn report:generate
    - exit $RETURN_CODE
  interruptible: true
  artifacts:
    expire_in: 1 hrs
    when: always
    paths:
      - $CI_PROJECT_DIR/quality/fcp/cypress/reports/cucumber/html-report
  after_script:
    - bash $CI_BUILDS_DIR/france-connect/fc/docker/docker-stack halt
    - docker container prune --force && docker volume prune -f
