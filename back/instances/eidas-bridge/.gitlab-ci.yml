eidas-bridge:
  stage: 'End to end'
  image: ${E2E_DOCKER_IMAGE}
  tags:
    - docker
  variables:
    FC_ROOT: '$CI_BUILDS_DIR/france-connect'
    TZ: 'Europe/Paris'
  cache:
    key: "${CI_PROJECT_ID}"
    policy: pull
    paths:
      - back/node_modules/
  before_script:
    - echo "FC_DOCKER_VERSION=$FC_DOCKER_VERSION"
    - if [ "$(docker ps -a -q -f name=^fc-rp-all)" ]; then bash $CI_BUILDS_DIR/france-connect/fc/docker/docker-stack halt && docker container prune -f && docker volume prune -f; fi
    - rm -rf $FC_ROOT/fc-docker
    - git clone -b $FC_DOCKER_VERSION --single-branch https://gitlab-ci-token:$CI_JOB_TOKEN@gitlab.dev-franceconnect.fr/france-connect/fc-docker.git $FC_ROOT/fc-docker
    - shopt -s expand_aliases
    - alias docker-stack=$FC_ROOT/fc/docker/docker-stack
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - if [[ ! -d $FC_ROOT/mocks ]]; then cp -R /var/www/mocks $FC_ROOT/; fi
    - ln -s $CI_PROJECT_DIR $FC_ROOT/fc/docker/volumes/src/fc
    - ln -s $FC_ROOT/fc/front/user-dashboard $FC_ROOT/fc/docker/volumes/src/user-dashboard
    - for mock in `find $FC_ROOT/mocks -maxdepth 1 -mindepth 1 -type d`; do ln -s $mock $FC_ROOT/fc/docker/volumes/src; done
  script:
    - docker-stack up eidas
    - docker-stack dep corev2 fip1v2 rnipp # eidas-bridge fsp1v2 are included in corev2 (monorepo)
    - docker-stack start corev2 eidas-bridge csmr-hsm rnipp fsp1v2 fsp2v2 fsp3v2 fip1v2 fip2v2 fip6v2 fip7v2
    # ## -- Build like for prod
    #- docker-stack exec fsp1v2 yarn build mock-service-provider-high # Will build for fsp2v2 as well
    #- docker-stack exec corev2 yarn build eidas-bridge
    #- docker-stack exec csmr-hsm yarn build csmr-hsm-high
    # ## -- Launch like prod
    #- docker-stack exec fsp1v2 yarn start:prod:mock-service-provider-high &
    #- docker-stack exec fsp2v2 yarn start:prod:mock-service-provider-high &
    #- docker-stack exec corev2 yarn start:prod:eidas-bridge &
    #- docker-stack exec csmr-hsm yarn start:prod:csmr-hsm-high &
    # Starting Cypress
    - timeout 60 bash -c 'while [[ "$(curl --insecure -s -o /dev/null -w ''%{http_code}'' https://eidas-bridge.docker.dev-franceconnect.fr/.well-known/openid-configuration)" != "200" ]];
      do echo "Waiting for eidas-bridge..." && sleep 10; done' || (
      (echo 'Cannot connect to eidas-bridge') &&
      (docker exec fc_eidas-bridge_1 cat /tmp/.pm2/logs/eidas-bridge-error-0.log || true) &&
      (docker exec fc_eidas-bridge_1 cat /tmp/.pm2/logs/eidas-bridge-out-0.log || true) &&
      exit 1)
    - npx cypress${CYPRESS_VERSION} run -c video=${CYPRESS_VIDEO} -P back/instances/eidas-bridge || (
      (docker cp fc_corev2_1:/tmp/.pm2/logs back/instances/eidas-bridge/cypress || true) &&
      (docker cp fc_eidas-bridge_1:/tmp/.pm2/logs back/instances/eidas-bridge/cypress || true) &&
      (docker cp fc_csmr-hsm_1:/tmp/.pm2/logs back/instances/eidas-bridge/cypress || true) &&
      (docker cp fc_rnipp_1:/tmp/.pm2/logs back/instances/eidas-bridge/cypress || true) &&
      (docker cp fc_fip1v2_1:/tmp/.pm2/logs back/instances/eidas-bridge/cypress || true) &&
      (docker cp fc_fip2v2_1:/tmp/.pm2/logs back/instances/eidas-bridge/cypress || true) &&
      (docker cp fc_fip6v2_1:/tmp/.pm2/logs back/instances/eidas-bridge/cypress || true) &&
      (docker cp fc_fip7v2_1:/tmp/.pm2/logs back/instances/eidas-bridge/cypress || true) &&
      (docker cp fc_fsp1v2_1:/tmp/.pm2/logs back/instances/eidas-bridge/cypress || true) &&
      (docker cp fc_fsp2v2_1:/tmp/.pm2/logs back/instances/eidas-bridge/cypress || true) &&
      (docker cp fc_fsp3v2_1:/tmp/.pm2/logs back/instances/eidas-bridge/cypress || true) &&
      (docker cp fc-rp-all:/var/log/nginx back/instances/eidas-bridge/cypress/logs || true) &&
      exit 1)
  interruptible: true
  artifacts:
    expire_in: 1 hrs
    when: on_failure
    paths:
      - back/instances/eidas-bridge/cypress/screenshots
      - back/instances/eidas-bridge/cypress/videos
      - back/instances/eidas-bridge/cypress/logs
  after_script:
    - bash $CI_BUILDS_DIR/france-connect/fc/docker/docker-stack halt
    - docker container prune --force && docker volume prune -f
