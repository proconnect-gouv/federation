#

.base_end_to_end:
  image: registry.gitlab.dev-franceconnect.fr/france-connect/fc/ci-cd/e2e:cypress-base-22.13.0
  stage: 'End to end'
  #
  needs:
    - job: ðŸ§¶ back
      optional: true
    - job: ðŸ§¶ quality
      optional: true
  timeout: 1h
  tags:
    - cypress-fca
  retry:
    max: 2
  services:
    - name: docker:27-dind
  variables:
    TZ: 'Europe/Paris'
    VERBOSE: 1
    CYPRESS_PLATFORM: 'fca-low'
    CYPRESS_TEST_ENV: 'docker'
    CYPRESS_INTERNAL_BROWSER_CONNECT_TIMEOUT: 120000
  rules:
    # Force PC_APPS_VERSION for "fca-staging" branch and MR from "fca-staging" branch
    - if: '$CI_COMMIT_BRANCH == "fca-staging" || $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == "fca-staging"'
      variables:
        BDD_TAGS: 'not @ignore'
        PC_APPS_VERSION: 'fca-staging'

    # Add PC_APPS_VERSION for MR when custom PC_APPS_VERSION is not passed
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $PC_APPS_VERSION == null'
      variables:
        BDD_TAGS: 'not @ignore'
        PC_APPS_VERSION: 'fca-staging'

    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $PC_APPS_VERSION != null'
      variables:
        BDD_TAGS: 'not @ignore'
  cache:
    - key:
        files:
          - quality/yarn.lock
        prefix: fca_quality_node_modules
      paths:
        - quality/node_modules
        - ${CYPRESS_CACHE_FOLDER}
      policy: pull
    - key:
        files:
          - back/yarn.lock
        prefix: fca_back_node_modules
      paths:
        - back/node_modules
      policy: pull
  before_script:
    - shopt -s expand_aliases
    - alias docker-stack=${FC_ROOT}/proconnect-federation/docker/docker-stack
    # Test Scope definition
    - BDD_TAGS=${BDD_TAGS_FCA_LOW:-$BDD_TAGS}
    - echo "BDD_TAGS=$BDD_TAGS"
    # Check FC Apps version for FCA
    - echo "PC_APPS_VERSION=${PC_APPS_VERSION}"
    # Ensure a clean docker environnement
    - docker-stack prune-ci
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - RETURN_CODE=0
    # Bind sources in docker volumes
    - ln -s $CI_PROJECT_DIR ${FC_ROOT}/proconnect-federation/docker/volumes/src/proconnect-federation
    # Return to project directory
    - wait
    - cd $CI_PROJECT_DIR
    # Up the docker-stack with minimal requirement
    - export NODE_VERSION=v22.13.0

    # add manually the network fc_public
    - docker network create --driver bridge fc_public
    - docker-stack up core-fca-low
    - docker exec fc_core-fca-low_1 bash -c "node --version"
  interruptible: true
  artifacts:
    expire_in: 1 hrs
    when: always
    paths:
      - quality/fca/cypress/reports/cucumber/html-report
      - quality/fca/cypress/snapshots/diff
      - artifacts-logs
  after_script:
    # Extract logs in case of failure
    - if [ "${CI_JOB_STATUS}" == "failed" ]; then ${CI_PROJECT_DIR}/back/scripts/ci/extract-pm2-rp-logs.sh; fi
    # Exit with return code
    - exit ${RETURN_CODE:-0}
    - docker-stack halt

#

fca-low-snapshot:
  extends: .base_end_to_end
  script:
    - docker-stack up min-fca-low
    # Start the NodeJS apps
    - docker-stack start-all-ci
    # Ensure the required apps are running
    - docker-stack wait "core-fca-low" "https://core-fca-low.docker.dev-franceconnect.fr/api/v2/.well-known/openid-configuration"
    #
    # Starting Cypress Quality checks
    - $CI_PROJECT_DIR/back/scripts/ci/broadcast.sh "Starting visual checks"
    - cd $CI_PROJECT_DIR/quality/fca
    ## temp log to display quality content
    - yarn test:low:snapshot -c video=${CYPRESS_VIDEO}
    - yarn report

fca-low-chrome-desktop:
  extends: .base_end_to_end
  script:
    # Shallow clone depth 1 FC-APP repository
    - rm -rf ${FC_ROOT}/proconnect-exploitation
    - git clone -b $PC_APPS_VERSION --depth 1 https://gitlab-ci-token:$CI_JOB_TOKEN@gitlab.dev-franceconnect.fr/proconnect/proconnect-exploitation.git ${FC_ROOT}/proconnect-exploitation
    - ln -s ${FC_ROOT}/proconnect-exploitation ${FC_ROOT}/proconnect-federation/docker/volumes/src/proconnect-exploitation
    - docker-stack up bdd-fca-low
    - rsync -a $CI_PROJECT_DIR/cache/proconnect-exploitation/ ${FC_ROOT}/proconnect-exploitation/ || true
    # Start the NodeJS apps
    - docker-stack start-all-ci
    # Ensure the required apps are running
    - docker-stack wait "core-fca-low" "https://core-fca-low.docker.dev-franceconnect.fr/api/v2/.well-known/openid-configuration"
    - docker-stack wait "exploitation-fca-low" "https://exploitation-fca-low.docker.dev-franceconnect.fr/login"
    # Starting Cypress Quality checks
    - $CI_PROJECT_DIR/back/scripts/ci/broadcast.sh "Starting Quality checks with tags $BDD_TAGS"
    - cd $CI_PROJECT_DIR/quality/fca
    - yarn test:low:chrome-desktop -c video=${CYPRESS_VIDEO} --env TAGS="$BDD_TAGS"
    - yarn report
