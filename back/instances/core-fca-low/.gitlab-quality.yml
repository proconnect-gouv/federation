quality-fca-low-docker:
  stage: 'End to end'
  image: ${E2E_DOCKER_IMAGE}
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" || $CI_COMMIT_BRANCH == "staging"'
  tags:
    - cypress
  variables:
    TZ: 'Europe/Paris'
  cache:
    key: '${CI_PROJECT_ID}'
    policy: pull
    paths:
      - back/node_modules/
      - front/node_modules/
      - front/apps/agent-connect/node_modules/
      - quality/node_modules/
      - $CYPRESS_CACHE_FOLDER
  before_script:
    - yarn config set proxy $PROXY_EXPLOITATION && yarn config set https-proxy $PROXY_EXPLOITATION
    - echo "FC_APPS_VERSION=$FC_APPS_VERSION"
    - if [ "$(docker ps -aq --filter name=^fc |wc -l) -ge 1" ]; then docker container rm -f $(docker ps -aq --filter name=^fc) || true; docker volume prune -f; fi
    - shopt -s expand_aliases
    - alias docker-stack=$FC_ROOT/fc/docker/docker-stack
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - rm -rf $FC_ROOT/fc-apps
    - git clone -b $FC_APPS_VERSION https://gitlab-ci-token:$CI_JOB_TOKEN@gitlab.dev-franceconnect.fr/france-connect/fc-apps.git $FC_ROOT/fc-apps
    - ln -s $CI_PROJECT_DIR $FC_ROOT/fc/docker/volumes/src/fc
    - ln -s $FC_ROOT/fc/front/apps/agent-connect $FC_ROOT/fc/docker/volumes/src/agent-connect
    - ln -s $FC_ROOT/fc-apps $FC_ROOT/fc/docker/volumes/src/fc-apps
    - cd $FC_ROOT/fc-apps/fc-exploitation && yarn install
    - cd $CI_PROJECT_DIR/quality/fca && yarn install
    - cd $CI_PROJECT_DIR
  script:
    - docker-stack up all-fca-low
    - docker exec fc_core-fca-low_1 bash -c "yarn config set proxy $PROXY_EXPLOITATION && yarn config set https-proxy $PROXY_EXPLOITATION"
    - docker exec fc_fca-low-front_1 bash -c "yarn config set proxy $PROXY_EXPLOITATION && yarn config set https-proxy $PROXY_EXPLOITATION"
    - docker-stack fca-low-front &
    - docker-stack dep core-fca-low
    - docker-stack fixtures-fca-low
    - docker-stack start exploitation-fca-low
    - docker-stack start fsa1-low fsa2-low fsa4-low fia1-low fia2-low fia4-low fia5-low
    - wait
    - docker-stack start core-fca-low fca-low-front
    # Starting Cypress
    - timeout 120 bash -c 'while [[ "$(curl --insecure -s -o /dev/null -w ''%{http_code}'' https://core-fca-low.docker.dev-franceconnect.fr/api/v2/.well-known/openid-configuration)" != "200" ]];
      do echo "Waiting for core-fca-low..." && sleep 10; done' || (
      (echo 'Cannot connect to core-fca-low') &&
      (docker exec fc_core-fca-low_1 cat /tmp/.pm2/logs/core-fca-low-error-0.log || true) &&
      (docker exec fc_core-fca-low_1 cat /tmp/.pm2/logs/core-fca-low-out-0.log || true) &&
      exit 1)
    - timeout 100 bash -c 'while [[ "$(curl --insecure -s -o /dev/null -w ''%{http_code}'' https://exploitation-fca-low.docker.dev-franceconnect.fr/login)" != "200" ]];
      do echo "Waiting for exploitation-fca-low..." && sleep 10; done' ||
      (echo 'Cannot connect to exploitation-fca-low' &&
      (docker exec fc_exploitation-fca-low_1 cat /tmp/.pm2/logs/exploitation-fca-low-error-0.log || true) &&
      (docker exec fc_exploitation-fca-low_1 cat /tmp/.pm2/logs/exploitation-fca-low-out-0.log || true) &&
      exit 1)
    - cd $CI_PROJECT_DIR/quality/fca
    - CYPRESS_TEST_ENV=docker yarn test:low:chrome-desktop -c video=${CYPRESS_VIDEO} || RETURN_CODE=1
    - yarn report:prepare
    - CYPRESS_PLATFORM=fca-low CYPRESS_TEST_ENV=docker yarn report:generate
    - exit $RETURN_CODE
  interruptible: true
  artifacts:
    expire_in: 1 hrs
    when: always
    paths:
      - $CI_PROJECT_DIR/quality/fca/cypress/reports/cucumber/html-report
  after_script:
    - bash $CI_BUILDS_DIR/france-connect/fc/docker/docker-stack halt
    - docker container prune --force && docker volume prune -f
