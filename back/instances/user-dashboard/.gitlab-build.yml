.base-build-front:
  stage: 'Build Front'
  image: ${FC_DOCKER_REGISTRY}/nodejs:${NODE_VERSION}-dev
  tags:
    - build
  only:
    - tags
  when: manual
  environment:
    name: build
  variables:
    PACKAGE: ${CI_COMMIT_REF_NAME}.tar.gz
    RELEASE_VERSION: ${CI_COMMIT_REF_NAME}
  script:
    - cd front
    - yarn install
    - cd apps/$APP
    - GENERATE_SOURCEMAP=false yarn build --production
    - tar zcvf ${CI_PROJECT_DIR}/${PACKAGE} -C ${CI_PROJECT_DIR}/front/apps/${APP}/build/ .
    - >
      curl --header "JOB-TOKEN:$CI_JOB_TOKEN" --upload-file ${CI_PROJECT_DIR}/${PACKAGE} "${INFRA_PACKAGE_REGISTRY}/${APP}/${CI_COMMIT_REF_NAME}/${PACKAGE}"
    - echo -e "\e[1;34m$MSG $RELEASE_VERSION\e[0m"

.base-tag-front-to-prod:
  stage: 'Tag'
  image: ${BUILD_IMAGE}
  tags:
    - build
  rules:
    - if: $CI_COMMIT_TAG && $CI_COMMIT_REF_NAME =~ /RC.$/
      when: manual
      allow_failure: false
  environment:
    name: build
  variables:
    GIT_STRATEGY: none
    PACKAGE: ${CI_COMMIT_REF_NAME}.tar.gz
    RELEASE_VERSION: ${CI_COMMIT_REF_NAME}
    PATCH_VERSION: 0
  before_script:
    - PROD_RELEASE_VERSION=${RELEASE_VERSION::-3}.${PATCH_VERSION}
  script:
    - >
      curl --header "JOB-TOKEN:$CI_JOB_TOKEN" "${INFRA_PACKAGE_REGISTRY}/${APP}/${RELEASE_VERSION}/${PACKAGE}" --output ${PACKAGE}
    - while [[ $(curl --header "JOB-TOKEN:$CI_JOB_TOKEN" -I -s -o /dev/null -w "%{http_code}" "${INFRA_PACKAGE_REGISTRY}/${APP}/${RELEASE_VERSION}/${PROD_RELEASE_VERSION}.tar.gz") == 200 ]];
      do PATCH_VERSION=$((PATCH_VERSION+1)); PROD_RELEASE_VERSION=${RELEASE_VERSION::-3}.${PATCH_VERSION}; done
    - export PROD_RELEASE_VERSION
    - export PROD_PACKAGE=${PROD_RELEASE_VERSION}.tar.gz
    - mv ${PACKAGE} ${PROD_PACKAGE}
    - >
      curl --header "JOB-TOKEN:$CI_JOB_TOKEN" --upload-file ${CI_PROJECT_DIR}/${PROD_PACKAGE} "${INFRA_PACKAGE_REGISTRY}/${APP}/${RELEASE_VERSION}/${PROD_PACKAGE}"
    - echo -e "\e[1;34m$MSG $PROD_RELEASE_VERSION\e[0m"
    - >
      curl -s -X POST --header "PRIVATE-TOKEN: $PRIVATE_TOKEN" "https://gitlab.dev-franceconnect.fr/api/v4/projects/${CI_PROJECT_ID}/repository/tags?tag_name=${PROD_RELEASE_VERSION}&ref=${RELEASE_VERSION}"

.base-build:
  stage: 'Build'
  image: ${BUILD_IMAGE}
  tags:
    - build
  only:
    - tags
  when: manual
  environment:
    name: build
  variables:
    GIT_STRATEGY: none
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
    RELEASE_VERSION: ${CI_COMMIT_REF_NAME}
  services:
    - name: docker:19.03.12-dind
      command: ["--experimental"]
  before_script:
    - echo "$INFRA_REGISTRY_PASS" | docker login $INFRA_REGISTRY --username $INFRA_REGISTRY_USER --password-stdin
    - rm -rf $FC_ROOT/fc-docker
    - git clone -b $FC_DOCKER_VERSION --single-branch https://gitlab-ci-token:$CI_JOB_TOKEN@gitlab.dev-franceconnect.fr/france-connect/fc-docker.git $FC_ROOT/fc-docker
  script:
    - cd $FC_ROOT/fc-docker
    - ./build.sh $APP $RELEASE_VERSION
    - echo -e "\e[1;34m$MSG $RELEASE_VERSION\e[0m"

.base-tag-to-prod:
  stage: 'Tag'
  image: ${BUILD_IMAGE}
  tags:
    - build
  rules:
    - if: $CI_COMMIT_TAG && $CI_COMMIT_REF_NAME =~ /RC.$/
      when: manual
      allow_failure: false
  variables:
    GIT_STRATEGY: none
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
    PATCH_VERSION: 0
    RELEASE_VERSION: $CI_COMMIT_REF_NAME
    DOCKER_CLI_EXPERIMENTAL: enabled
  services:
    - name: docker:19.03.12-dind
      command: ["--experimental"]
  before_script:
    - echo "$INFRA_REGISTRY_PASS" | docker login $INFRA_REGISTRY --username $INFRA_REGISTRY_USER --password-stdin
    - PROD_RELEASE_VERSION=${RELEASE_VERSION::-3}.${PATCH_VERSION}
  script:
    - while docker manifest inspect $INFRA_REGISTRY/$DOCKER_IMAGE:$PROD_RELEASE_VERSION; [[ $? -eq 0 ]];
      do PATCH_VERSION=$((PATCH_VERSION+1)); PROD_RELEASE_VERSION=${RELEASE_VERSION::-3}.${PATCH_VERSION}; done
    - export PROD_RELEASE_VERSION
    - docker pull $INFRA_REGISTRY/$DOCKER_IMAGE:$RELEASE_VERSION
    - docker tag $INFRA_REGISTRY/$DOCKER_IMAGE:$RELEASE_VERSION $INFRA_REGISTRY/$DOCKER_IMAGE:$PROD_RELEASE_VERSION
    - docker push $INFRA_REGISTRY/$DOCKER_IMAGE:$PROD_RELEASE_VERSION
    - echo -e "\e[1;34m$MSG $PROD_RELEASE_VERSION\e[0m"
    - >
      curl -s -X POST --header "PRIVATE-TOKEN: $PRIVATE_TOKEN" "https://gitlab.dev-franceconnect.fr/api/v4/projects/${CI_PROJECT_ID}/repository/tags?tag_name=${PROD_RELEASE_VERSION}&ref=${RELEASE_VERSION}"
  environment:
    name: build

ud/build-front:
  extends: .base-build-front
  variables:
    APP: user-dashboard
    MSG: "environments/pa4-integ/group_vars/all/versions.yml\nud_front_version:"

ud/tag-front-to-prod:
  extends: .base-tag-front-to-prod
  variables:
    APP: user-dashboard
    MSG: "environments/pa4-preprod/group_vars/all/versions.yml\nenvironments/pa4-prod/group_vars/all/versions.yml\nud_front_version:"
  needs:
    - job: ud/build-front

ud/back-build-image:
  extends: .base-build
  variables:
    APP: user-dashboard
    MSG: "environments/pa4-integ/group_vars/all/versions.yml\nud_back_version:"

ud/back-tag-to-prod-image:
  extends: .base-tag-to-prod
  variables:
    DOCKER_IMAGE: user-dashboard
    MSG: "environments/pa4-preprod/group_vars/all/versions.yml\nenvironments/pa4-prod/group_vars/all/versions.yml\nud_back_version:"
  needs:
    - job: ud/back-build-image

ud/tracks-data-provider-build-image:
  extends: .base-build
  variables:
    APP: tracks-data-provider
    MSG: "environments/pa4-integ/group_vars/all/versions.yml\ntracks_data_provider_version:"

ud/tracks-data-provider-tag-to-prod-image:
  extends: .base-tag-to-prod
  variables:
    DOCKER_IMAGE: tracks-data-provider
    MSG: "environments/pa4-preprod/group_vars/all/versions.yml\nenvironments/pa4-prod/group_vars/all/versions.yml\ntracks_data_provider_version:"
  needs:
    - job: ud/tracks-data-provider-build-image

ud/csmr-tracks-high-build-image:
  extends: .base-build
  variables:
    APP: csmr-tracks-high
    MSG: "environments/pa4-integ/group_vars/all/versions.yml\ncsmr_tracks_high_version:"

ud/csmr-tracks-high-tag-to-prod-image:
  extends: .base-tag-to-prod
  variables:
    DOCKER_IMAGE: csmr-tracks-high
    MSG: "environments/pa4-preprod/group_vars/all/versions.yml\nenvironments/pa4-prod/group_vars/all/versions.yml\ncsmr_tracks_high_version:"
  needs:
    - job: ud/csmr-tracks-high-build-image

ud/csmr-tracks-legacy-build-image:
  extends: .base-build
  variables:
    APP: csmr-tracks-legacy
    MSG: "environments/pa4-integ/group_vars/all/versions.yml\ncsmr_tracks_legacy_version:"

ud/csmr-tracks-legacy-tag-to-prod-image:
  extends: .base-tag-to-prod
  variables:
    DOCKER_IMAGE: csmr-tracks-legacy
    MSG: "environments/pa4-preprod/group_vars/all/versions.yml\nenvironments/pa4-prod/group_vars/all/versions.yml\ncsmr_tracks_legacy_version:"
  needs:
    - job: ud/csmr-tracks-legacy-build-image

ud/csmr-aggregate-tracks-build-image:
  extends: .base-build
  variables:
    APP: csmr-aggregate-tracks
    MSG: "environments/pa4-integ/group_vars/all/versions.yml\ncsmr_aggregate_tracks_version:"

ud/csmr-aggregate-tracks-tag-to-prod-image:
  extends: .base-tag-to-prod
  variables:
    DOCKER_IMAGE: csmr-aggregate-tracks
    MSG: "environments/pa4-preprod/group_vars/all/versions.yml\nenvironments/pa4-prod/group_vars/all/versions.yml\ncsmr_aggregate_tracks_version:"
  needs:
    - job: ud/csmr-aggregate-tracks-build-image

ud/csmr-user-preferences-high-build-image:
  extends: .base-build
  variables:
    APP: csmr-user-preferences-high
    MSG: "environments/pa4-integ/group_vars/all/versions.yml\ncsmr_user_preferences_version:"

ud/csmr-user-preferences-high-tag-to-prod-image:
  extends: .base-tag-to-prod
  variables:
    DOCKER_IMAGE: csmr-user-preferences-high
    MSG: "environments/pa4-preprod/group_vars/all/versions.yml\nenvironments/pa4-prod/group_vars/all/versions.yml\ncsmr_user_preferences_version:"
  needs:
    - job: ud/csmr-user-preferences-high-build-image
