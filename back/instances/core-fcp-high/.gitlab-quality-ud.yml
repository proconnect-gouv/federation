quality-ud-fcp-high-docker:
  stage: 'End to end'
  image: ${E2E_DOCKER_IMAGE}
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" || $CI_COMMIT_BRANCH == "staging"'
  tags:
    - cypress
  variables:
    TZ: 'Europe/Paris'
  cache:
    key: '${CI_PROJECT_ID}'
    policy: pull
    paths:
      - back/node_modules/
      - front/node_modules/
      - front/apps/user-dashboard/node_modules/
      - quality/node_modules/
  before_script:
    - yarn config set proxy $PROXY_EXPLOITATION && yarn config set https-proxy $PROXY_EXPLOITATION
    - echo "FC_DOCKER_VERSION=$FC_DOCKER_VERSION"
    # Prune existing container
    - if [ "$(docker ps -aq --filter name=^fc |wc -l) -ge 1" ]; then docker container rm -f $(docker ps -aq --filter name=^fc) || true; docker volume prune -f; fi
    # Fetch fc-docker
    - shopt -s expand_aliases
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - rm -rf $FC_ROOT/fc-docker
    - git clone -b $FC_DOCKER_VERSION https://gitlab-ci-token:$CI_JOB_TOKEN@gitlab.dev-franceconnect.fr/france-connect/fc-docker.git $FC_ROOT/fc-docker  --single-branch
    # Fetch FC Legacy
    - export FC_LEGACY_ROOT=$FC_ROOT/fc-docker/volumes/src/FranceConnect
    - git clone https://gitlab-ci-token:$CI_JOB_TOKEN@gitlab.dev-franceconnect.fr/france-connect/core-legacy.git $FC_LEGACY_ROOT
    # Setup fc-docker volumes
    - ln -s $CI_PROJECT_DIR $FC_ROOT/fc-docker/volumes/src/fc
    # Setup the mocks
    - if [[ ! -d $FC_ROOT/mocks ]]; then cp -R /var/www/mocks $FC_ROOT/; fi
    - for mock in `find $FC_ROOT/mocks -maxdepth 1 -mindepth 1 -type d`; do cd $mock && git fetch && git checkout -f origin/master && git clean -df && echo "Installing depedencies for $(/usr/bin/basename $mock)" && npm install; ln -sfn $mock $FC_ROOT/fc-docker/volumes/src; done
    # Setup ElasticSearch
    - echo "localhost elasticsearch" >> /etc/hosts
    - cp -R /var/www/elasticsearch/data/ $FC_ROOT/fc-docker/volumes/elasticsearch/
    - chown -R 1000:0 $FC_ROOT/fc-docker/volumes/elasticsearch/data/
    - cd $FC_LEGACY_ROOT && yarn install
  script:
    # Start FC legacy stack and User Dashboard
    - alias docker-stack=$FC_ROOT/fc-docker/docker-stack
    - docker-stack up ud
    - docker-stack exec ud-front yarn config set proxy $PROXY_EXPLOITATION && yarn config set https-proxy $PROXY_EXPLOITATION
    - docker-stack exec ud-back yarn config set proxy $PROXY_EXPLOITATION && yarn config set https-proxy $PROXY_EXPLOITATION
    - docker-stack dep ud-front ud-back
    - docker-stack start csmr-tracks fc-core fip1 rnipp ud-front ud-back
    - timeout 200 bash -c 'while [[ "$(curl --insecure -s -o /dev/null -w ''%{http_code}'' https://ud.docker.dev-franceconnect.fr)" != "200" ]];
      do echo "Waiting for ud..." && sleep 10; done' || (
      (echo 'Cannot connect to ud') &&
      (docker exec fc_ud-front_1 cat /tmp/.pm2/logs/ud-front-error-0.log || true) &&
      (docker exec fc_ud-front_1 cat /tmp/.pm2/logs/ud-front-error-out-0.log || true) &&
      exit 1)
    # Start the Cypress tests
    - cd $CI_PROJECT_DIR/quality/fcp
    - yarn install
    - CYPRESS_TEST_ENV=docker yarn test:high:chrome-desktop --env TAGS='@userDashboard and not @ignoreHigh and not @fcpLow' -c video=${CYPRESS_VIDEO} || RETURN_CODE=1
    - yarn report:prepare
    - CYPRESS_PLATFORM=fcp-high CYPRESS_TEST_ENV=docker yarn report:generate
    - exit $RETURN_CODE
  interruptible: true
  artifacts:
    expire_in: 1 hrs
    when: always
    paths:
      - $CI_PROJECT_DIR/quality/fcp/cypress/reports/cucumber/html-report
  after_script:
    - bash $CI_BUILDS_DIR/france-connect/fc-docker/docker-stack halt
    - docker container prune --force && docker volume prune -f
