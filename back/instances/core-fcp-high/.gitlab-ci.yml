fcp-high:
  stage: 'End to end'
  image: ${E2E_DOCKER_IMAGE}
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" || $CI_COMMIT_BRANCH == "staging"'
  timeout: 1h
  tags:
    - cypress
  variables:
    TZ: 'Europe/Paris'
  cache:
    key: ${CACHE_KEY}
    policy: pull
    paths:
      # Back
      - back/node_modules/
      # Front
      - front/node_modules/
      - front/instances/agent-connect/node_modules/
      - front/instances/exploit-fca-low/node_modules/
      - front/instances/exploit-fcp-high/node_modules/
      - front/instances/partners-fca/node_modules/
      - front/instances/partners-fcp/node_modules/
      - front/instances/user-dashboard/node_modules/
      # Quality
      - quality/node_modules/
      # Fc-apps
      - cache/fc-apps/fc-exploitation/node_modules/
      - cache/fc-apps/fc-stats/node_modules/
      - cache/fc-apps/fc-support/node_modules/
      - cache/fc-apps/fc-workers/node_modules/
      - cache/fc-apps/node_modules/
      - cache/fc-apps/shared/node_modules/
      # Cypress
      - cache/Cypress
  before_script:
    # Ensure a clean docker environnement
    - yarn config set proxy $PROXY_EXPLOITATION && yarn config set https-proxy $PROXY_EXPLOITATION
    - if [ "$(docker ps -aq --filter name=^fc |wc -l) -ge 1" ]; then docker container rm -f $(docker ps -aq --filter name=^fc) || true; docker volume prune -f; fi
    - shopt -s expand_aliases
    - alias docker-stack=$FC_ROOT/fc/docker/docker-stack
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - if [[ ! -d $FC_ROOT/mocks ]]; then cp -R /var/www/mocks $FC_ROOT/; fi
    - RETURN_CODE=0
    # Shallow clone depth 1 FC-APP repository
    - rm -rf $FC_ROOT/fc-apps
    - git clone -b $FC_APPS_VERSION --depth 1 https://gitlab-ci-token:$CI_JOB_TOKEN@gitlab.dev-franceconnect.fr/france-connect/fc-apps.git $FC_ROOT/fc-apps
    # Bind sources in docker volumes
    - ln -s $CI_PROJECT_DIR $FC_ROOT/fc/docker/volumes/src/fc
    - ln -s $FC_ROOT/fc/front/instances/user-dashboard $FC_ROOT/fc/docker/volumes/src/user-dashboard
    - ln -s $FC_ROOT/fc-apps $FC_ROOT/fc/docker/volumes/src/fc-apps
    - for mock in `find $FC_ROOT/mocks -maxdepth 1 -mindepth 1 -type d`; do cd $mock && git fetch && git checkout -f origin/master && git clean -df && echo "Installing depedencies for $(/usr/bin/basename $mock)" && npm install; ln -sfn $mock $FC_ROOT/fc/docker/volumes/src; done
    # Return to project directory
    - wait
    - cd $CI_PROJECT_DIR
  script:
    # Up the docker-stack with minimal requirement
    - docker-stack up bdd-fcp-high
    - docker exec fc_core-fcp-high_1 bash -c "yarn config set proxy $PROXY_EXPLOITATION && yarn config set https-proxy $PROXY_EXPLOITATION"
    - rsync -a $CI_PROJECT_DIR/cache/fc-apps/ $FC_ROOT/fc-apps/ || true
    - cd $CI_PROJECT_DIR/quality/fcp && yarn install --ignore-engines
    - cd $CI_PROJECT_DIR
    # Start the NodeJS apps
    - docker-stack start-all-ci
    # Ensure the required apps are running
    - docker-stack wait "core-fcp-high" "https://core-fcp-high.docker.dev-franceconnect.fr/api/v2/.well-known/openid-configuration"
    - docker-stack wait "exploitation-high" "https://exploitation-high.docker.dev-franceconnect.fr/login"
    # Starting Cypress Quality checks
    - $CI_PROJECT_DIR/back/scripts/ci/broadcast.sh "Starting Quality checks"
    - cd $CI_PROJECT_DIR/quality/fcp
    # Run Visual BDD tests and abort if failed
    - CYPRESS_TEST_ENV=docker yarn test:high:snapshot
    # Run Functional BDD tests
    - CYPRESS_TEST_ENV=docker yarn test:high:ci -c video=${CYPRESS_VIDEO} || RETURN_CODE=1
    - yarn report:prepare
    - CYPRESS_PLATFORM=fcp-high CYPRESS_TEST_ENV=docker yarn report:generate
    # Exit if return code equals 1
    - if [ $RETURN_CODE -ne 0 ]; then $CI_PROJECT_DIR/back/scripts/ci/extract-pm2-logs.sh && (docker cp fc-rp-all:/var/log/nginx /tmp/artifacts-logs || echo "[fc-rp-all] No NginX logs found") && exit $RETURN_CODE; fi
    # Starting Cypress E2E checks
    - $CI_PROJECT_DIR/back/scripts/ci/broadcast.sh "Starting E2E checks"
    - cd $CI_PROJECT_DIR/back
    - yarn test:e2e:core-fcp-high -c video=${CYPRESS_VIDEO} || RETURN_CODE=1
    # Extract logs in case of failure
    - if [ $RETURN_CODE -ne 0 ]; then $CI_PROJECT_DIR/back/scripts/ci/extract-pm2-logs.sh && (docker cp fc-rp-all:/var/log/nginx /tmp/artifacts-logs || echo "[fc-rp-all] No NginX logs found"); fi
    # Exit with return code
    - exit $RETURN_CODE
  interruptible: true
  artifacts:
    expire_in: 1 hrs
    when: always
    paths:
      - back/instances/core-fcp-high/cypress/screenshots
      - back/instances/core-fcp-high/cypress/videos
      - back/instances/core-fcp-high/cypress/logs
      - quality/fcp/cypress/reports/cucumber/html-report
      - quality/fcp/cypress/snapshots/diff
      - artifacts-logs
  after_script:
    - bash $CI_BUILDS_DIR/france-connect/fc/docker/docker-stack halt
    - docker container prune -f && docker volume prune -f && docker network prune -f
