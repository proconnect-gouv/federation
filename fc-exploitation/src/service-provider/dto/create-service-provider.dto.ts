import {
  IsNotEmpty,
  ArrayNotEmpty,
  IsString,
  Matches,
  IsIn,
} from 'class-validator';

export class CreateServiceProviderDto {
  @Matches(/^[a-z0-9-]+$/, { message: 'Veuillez renseigner un nom valide' })
  @IsNotEmpty({
    message: `L'url de redirection du fournisseur de service doit être renseigné`,
  })
  @IsString()
  readonly name: string;

  @IsNotEmpty({
    message: `L'url de redirection du fournisseur de service doit être renseigné`,
  })
  @IsString()
  readonly redirectUri: string;

  @IsNotEmpty({
    message: `L'url de redirection de déconnexion du fournisseur de service doit être renseigné`,
  })
  @IsString()
  readonly redirectUriLogout: string;

  @IsNotEmpty({
    message: `Veuillez renseigner le site du fournisseur de service`,
  })
  @IsString()
  readonly site: string;

  @IsNotEmpty({
    message: `Veuillez renseigner une ou plusieurs emails de contact`,
  })
  @IsString()
  readonly emails: string;

  @IsNotEmpty({
    message: `Veuillez renseigner une ou plusieurs adresse ip`,
  })
  @IsString()
  readonly ipAddresses: string;

  readonly activateClient: string;
  readonly clientStatus: string;

  constructor(
    name: string,
    redirectUri: string,
    redirectUriLogout: string,
    site: string,
    emails: string,
    activateClient: string,
    clientStatus: string,
  ) {
    this.name = name;
    this.redirectUri = redirectUri;
    this.redirectUriLogout = redirectUriLogout;
    this.site = site;
    this.emails = emails;
    this.activateClient = activateClient;
    this.clientStatus = clientStatus;
  }
}
