import { Test } from '@nestjs/testing';
import { ServiceProviderController } from './service-provider.controller';
import { getRepositoryToken, TypeOrmModule } from '@nestjs/typeorm';
import { ServiceProvider } from './service-provider.entity';

describe('ServiceProviderController', () => {
  let serviceProviderController: ServiceProviderController;
  const serviceProviderRepository = {
    find: jest.fn(),
  };

  beforeEach(async () => {
    const module = await Test.createTestingModule({
      imports: [TypeOrmModule.forFeature([ServiceProvider], 'fc-mongo')],
      providers: [ServiceProviderController],
    })
      .overrideProvider(getRepositoryToken(ServiceProvider, 'fc-mongo'))
      .useValue(serviceProviderRepository)
      .compile();
    serviceProviderController = await module.get<ServiceProviderController>(
      ServiceProviderController,
    );
    jest.resetAllMocks();
  });

  describe('list method', () => {
    it('returns the list of the available service providers', async () => {
      const mockedServiceProviders = [
        'La barbe',
        'de la femme',
        'Ã  Georges Moustaki',
      ];
      serviceProviderRepository.find.mockResolvedValueOnce(
        mockedServiceProviders,
      );

      const { serviceProviders } = await serviceProviderController.list();

      expect(serviceProviders).toEqual(mockedServiceProviders);
    });
  });
});
