import { CallHandler, ExecutionContext, NestInterceptor } from '@nestjs/common';
import { Observable } from 'rxjs';

export class MinistryInterceptor implements NestInterceptor {
  intercept(
    context: ExecutionContext,
    next: CallHandler<any>,
  ): Observable<any> {
    const request = context.switchToHttp().getRequest();
    const { identityProviders = [] } = request.body;

    // saved idP in an array of strings or an empty array
    // (fca need at least an empty array value for this property for display ministry in the list)
    request.body.identityProviders = Array.isArray(identityProviders)
      ? identityProviders
      : [identityProviders];

    // use acronym as id
    // (fca need at least an undefined value for this property for display ministry in the list)
    request.body.id = request.body.acronym;

    return next.handle();
  }
}
