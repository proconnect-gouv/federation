import { DeleteResult, ObjectID, Repository, UpdateResult } from 'typeorm';
import { Injectable, NotFoundException } from '@nestjs/common';
import { InjectRepository } from '@nestjs/typeorm';
import { Ministries } from './ministries.mongodb.entity';
import { IMinistryDTO } from './interface/ministry.interface';

@Injectable()
export class MinistryService {
  constructor(
    @InjectRepository(Ministries, 'fc-mongo')
    private readonly ministryRepository: Repository<Ministries>,
  ) {}

  async find(id: string): Promise<Ministries> {
    const ministry = await this.ministryRepository.findOne(id);

    if (!ministry) {
      throw new NotFoundException();
    }

    return ministry;
  }

  async findAll(): Promise<Ministries[]> {
    const ministries = await this.ministryRepository.find();

    if (!ministries) {
      throw new NotFoundException();
    }

    return ministries.sort((a, b) => (a.name > b.name ? 1 : -1));
  }

  async update(
    ministry: IMinistryDTO,
    id: string = null,
  ): Promise<UpdateResult> {
    return id
      ? await this.ministryRepository.update(id, ministry)
      : await this.ministryRepository.insert(ministry);
  }

  async delete(id: string): Promise<DeleteResult> {
    return await this.ministryRepository.delete(id);
  }
}
