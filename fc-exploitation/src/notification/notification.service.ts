import { Model } from 'mongoose';

import { Injectable } from '@nestjs/common';
import { InjectModel } from '@nestjs/mongoose';

import { INotification, IPaginatedNotification } from './interface/index';
import { IOptions } from '@fc/shared/pagination/interface/options-query-mongodb.interface';

@Injectable()
export class NotificationService {
  constructor(
    @InjectModel('Notification')
    private readonly notificationModel: Model<INotification>,
  ) {}

  async getNotifications(option): Promise<IPaginatedNotification> {
    const parameters: IOptions = {
      page: option.page,
      limit: option.limit,
      defaultLimit: option.defaultLimit,
    };

    if (option.sort) {
      parameters.sort = option.sort;
    }

    if (option.action) {
      parameters.action = option.action;
    }

    return this.notificationModel.paginate({}, option.route, parameters);
  }
}
