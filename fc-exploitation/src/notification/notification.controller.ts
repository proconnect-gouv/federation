import {
  Controller,
  Get,
  Render,
  Req,
  Query,
  UsePipes,
  ValidationPipe,
} from '@nestjs/common';

import { UserRole } from '@fc/shared/user/roles.enum';
import { Roles } from '@fc/shared/authentication/decorator';
import { NotificationService } from './notification.service';
import { IPaginatedNotification } from './interface/index';
import { NotificationQueryDTO } from './dto/notification-query.dto';

@Controller('notification')
export class NotificationController {
  constructor(private readonly notificationService: NotificationService) {}

  @Get('/information')
  @Roles(UserRole.OPERATOR)
  @UsePipes(new ValidationPipe({ transform: true }))
  @Render('notification/information')
  async informations(@Req() req, @Query() query: NotificationQueryDTO) {
    const csrfToken = req.csrfToken();
    const { page, limit } = query;

    let notifications: IPaginatedNotification;
    try {
      notifications = await this.notificationService.getNotifications({
        page,
        limit,
        route: '/notification/information',
        sort: 'createdAt',
        action: -1,
        defaultLimit: 10,
      });

      return {
        csrfToken,
        total: notifications.total,
        notifications: notifications.items,
      };
    } catch (err) {
      req.flash(
        'globalError',
        "Les messages n'ont pas pu être affichés à cause d'une erreur technique",
      );
    }
  }
}
