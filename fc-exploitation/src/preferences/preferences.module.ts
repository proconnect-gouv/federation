import { Citizen } from '@fc/shared/citizen/citizen.mongodb.entity';
import { Module } from '@nestjs/common';
import { TypeOrmModule } from '@nestjs/typeorm';
import * as crypto from 'crypto';
import { CitizenServiceBase } from '@fc/shared/citizen/citizen-base.service';
import { UserPreferencesModule } from '@fc/shared/user-preferences';
import { TotpService } from '@fc/shared/authentication/totp/totp.service';
import { PreferencesController } from './preferences.controller';
import { PreferencesService } from './preferences.service';
import { CitizenService } from '../citizen/citizen.service';

const cryptoProvider = {
  provide: 'cryptoProvider',
  useValue: crypto,
};
@Module({
  imports: [
    TypeOrmModule.forFeature([Citizen], 'fc-mongo'),
    UserPreferencesModule.registerFor('preferences'),
  ],
  providers: [
    PreferencesService,
    TotpService,
    CitizenService,
    cryptoProvider,
    CitizenServiceBase,
  ],
  controllers: [PreferencesController],
  exports: [CitizenServiceBase, PreferencesService],
})
export class PreferencesModule {}
