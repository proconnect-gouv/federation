import {Injectable, NestInterceptor, ExecutionContext, CallHandler} from "@nestjs/common";
import {Observable} from "rxjs";
import {GitService} from "shared/meta/git.service";

@Injectable()
export class LocalsInterceptor implements NestInterceptor {
    constructor(private readonly gitService: GitService) {}

    async intercept(context: ExecutionContext, next: CallHandler): Promise<Observable<any>> {
        const res = context.switchToHttp().getResponse();
        res.locals.GIT_CURRENT_BRANCH = await this.gitService.getCurrentBranch();
        res.locals.GIT_LATEST_COMMIT_SHORT_HASH = await this.gitService.getLatestCommitShortHash();
        res.locals.GIT_LATEST_COMMIT_LONG_HASH = await this.gitService.getLatestCommitLongHash();
        return next.handle();
    }
}
