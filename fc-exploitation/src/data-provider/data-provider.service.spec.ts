import { Test, TestingModule } from '@nestjs/testing';
import { DataProviderService } from './data-provider.service';
import { TypeOrmModule, getRepositoryToken } from '@nestjs/typeorm';
import { ScopeLabels } from './scope-labels.entity';
import { Repository } from 'typeorm';
import { IDataProvider } from './scope-labels.interface';

describe('DataProviderService', () => {
  let service: DataProviderService;

  const scopeLabelsRepository = {
    find: jest.fn(),
    findOne: jest.fn(),
    findAndCount: jest.fn(),
    save: jest.fn(),
    delete: jest.fn(),
  };

  beforeEach(async () => {
    const module: TestingModule = await Test.createTestingModule({
      imports: [TypeOrmModule.forFeature([ScopeLabels], 'fc-mongo')],
      providers: [DataProviderService, Repository],
    })
      .overrideProvider(getRepositoryToken(ScopeLabels, 'fc-mongo'))
      .useValue(scopeLabelsRepository)
      .compile();

    service = module.get<DataProviderService>(DataProviderService);
  });

  it('should be defined', () => {
    expect(service).toBeDefined();
  });

  it('shoud have a getScopesAndLabels method', () => {
    expect(service.getScopesAndLabels()).toBeDefined();
  });

  it('should have a createScopesAndLabels', () => {
    expect(service.getScopeAndLabelCount()).toBeDefined();
  });
});
