import { Injectable } from '@nestjs/common';
import { InjectRepository } from '@nestjs/typeorm';
import { Repository } from 'typeorm';
import { ScopeLabels } from './scope-labels.entity';
import { IScopeLabels } from './scope-labels.interface';

@Injectable()
export class DataProviderService {
  constructor(
    @InjectRepository(ScopeLabels, 'fc-mongo')
    private readonly scopeLabelsRepository: Repository<ScopeLabels>,
  ) {}
  /**
   * Get scope labels count
   */
  async getScopeAndLabelCount() {
    return this.scopeLabelsRepository.count();
  }

  /**
   * Get scope labels list
   */
  async getScopesAndLabels(): Promise<ScopeLabels[]> {
    return this.scopeLabelsRepository.find();
  }

  /**
   * Create new scopeLabels entry
   * @param newScopeAndLabel
   */
  async createScopeAndLabels(
    newScopeAndLabel: IScopeLabels,
  ): Promise<ScopeLabels> {
    const scopeLabelTosave = {
      scope: newScopeAndLabel.scope,
      label: `${newScopeAndLabel.label} (${newScopeAndLabel.fd})`,
    };

    return this.scopeLabelsRepository.save(scopeLabelTosave);
  }
}
