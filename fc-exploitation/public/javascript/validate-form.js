import $ from 'jquery';

export function validateForm(element) {
    const inputs = element.getElementsByTagName('input');
    const txtAreas = element.getElementsByTagName('textarea');


    for (let i = 0; i < inputs.length; ++i) {
        // check if inputs which change are valid
        inputs[i].addEventListener('input', function(event){

            if (document.getElementById('activated').checked || document.getElementById('unactivated').checked) {
                document.getElementById('activated').classList.remove('is-invalid');
                document.getElementById('activated').classList.add('is-valid');
                document.getElementById('unactivated').classList.remove('is-invalid');
                document.getElementById('unactivated').classList.add('is-valid');
            }

            if (document.getElementById('private').checked || document.getElementById('public').checked) {
                document.getElementById('private').classList.remove('is-invalid');
                document.getElementById('private').classList.add('is-valid');
                document.getElementById('public').classList.remove('is-invalid');
                document.getElementById('public').classList.add('is-valid');
            }

            // check input pattern
            if (inputs[i].checkValidity() === false) {
                inputs[i].classList.remove('is-valid');
                inputs[i].classList.add('is-invalid');
            } else {
                inputs[i].classList.remove('is-invalid');
                inputs[i].classList.add('is-valid');
            }
        }, false);

        // check on submit if form is valid
        element.addEventListener('submit', function(event) {
            if (inputs[i].checkValidity() === false) {
                inputs[i].classList.remove('is-valid');
                inputs[i].classList.add('is-invalid');
                event.preventDefault();
                event.stopPropagation();
                
            } else {
                inputs[i].classList.remove('is-invalid');
                inputs[i].classList.add('is-valid');
            }

            
        }, false);
    }

    for (let i = 0; i < txtAreas.length; ++i) {
        element.addEventListener('submit', function(event) {
        if(txtAreas[i].checkValidity() === false) {
            txtAreas[i].classList.remove('is-valid');
            txtAreas[i].classList.add('is-invalid');
            event.preventDefault();
            event.stopPropagation();
        }
        }, false);
    }

    $('textarea').keyup(validateTextarea);
}

function validateTextarea() {
    const textarea = this;
    const pattern = new RegExp('^' + $(textarea).attr('pattern') + '$');
    // check each line of text
    $.each($(this).val().split("\n"), function () {
        // check if the line matches the pattern
        var hasError = !this.match(pattern);
            // Not supported by the browser, fallback to manual error display...
        $(textarea).toggleClass('is-invalid', !!hasError);
        $(textarea).toggleClass('is-valid', !hasError);
        
        return !hasError;
    });
}
