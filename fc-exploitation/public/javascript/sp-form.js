export function changeDiscovery() {
  document
    .querySelector('#no-discovery')
    .addEventListener('change', function() {
      _handleState('discoveryUrl', true);
      _handleState('userInfoUrl', false);
      _handleState('authorizationUrl', false);
      _handleState('tokenUrl', false);
    });

  document.querySelector('#discovery').addEventListener('change', function() {
    _handleState('discoveryUrl', false);
    _handleState('userInfoUrl', true);
    _handleState('authorizationUrl', true);
    _handleState('tokenUrl', true);
  });
}

// Handle changes for input state & label wording
const _handleState = (inputName, isDisabled) => {
  const requiredLabel = document.querySelector(`label[for=${inputName}] span`);
  const input = document.querySelector(`input[name=${inputName}]`);
  input.disabled = isDisabled;
  input.required = !isDisabled;
  if (isDisabled) {
    requiredLabel.classList.add('d-none');
    if (input.classList.contains('is-invalid')) {
      input.classList.add('is-invalid-disabled');
      input.classList.remove('is-invalid');
    }
  } else {
    requiredLabel.classList.remove('d-none');
    if (input.classList.contains('is-invalid-disabled')) {
      input.classList.add('is-invalid');
    }
  }
};
