const BASE_URL = 'https://exploitation.docker.dev-franceconnect.fr';
const USER_OPERATOR = 'jean_moust';
const USER_PASS = 'georgesmoustaki';

function createServiceProvider(serviceProviderInfo) {
  cy.url().should('eq', `${BASE_URL}/service-provider`);
  cy.contains('Créer un fournisseur de service').click();

  // Fill in form
  cy.get('input[name=title]')
    .clear()
    .type(`${serviceProviderInfo.title}`);
  cy.get('input[name=name]')
    .clear()
    .type(`${serviceProviderInfo.name}`);
  cy.get('textarea[name=redirectUri]')
    .clear()
    .type(`${serviceProviderInfo.redirectUri}`);
  cy.get('textarea[name=redirectUriLogout]')
    .clear()
    .type(`${serviceProviderInfo.redirectUriLogout}`);
  cy.get('input[name=site]')
    .clear()
    .type(`${serviceProviderInfo.site}`);
  cy.get('textarea[name=emails]')
    .clear()
    .type(`${serviceProviderInfo.emails}`);
  cy.get('textarea[name=ipAddresses]')
    .clear()
    .type(`${serviceProviderInfo.idAdresses}`);
  cy.get('[type="radio"]')
    .check('public', { force: true });

  cy.get('form[name="fs-form"] button[type="submit"]')
    .click();

  cy.url().should('eq', `${BASE_URL}/service-provider`);
  cy.contains(`Le fournisseur de service ${serviceProviderInfo.title} a été créé avec succès !`);
  cy.get('.alert-success > .close').click();
}

describe('Delete service provider', () => {
  const fsp1 = {
    title: 'Service provider Cypress 1',
    name: 'FSCypress1',
    redirectUri: 'https://url.com',
    redirectUriLogout: 'https://url.com/logout',
    site: 'https://url.com',
    emails: 'titlen@gmail.com',
    idAdresses: '192.0.0.0',
  }

  beforeEach(() => {
    cy.visit(`${BASE_URL}`);
    cy.get('input[name="username"]')
      .clear()
      .type(USER_OPERATOR);
    cy.get('input[name="password"]')
      .clear()  
      .type(USER_PASS);
    cy.get('button[type="submit"]').click();
  });

  it('Should delete one service provider thanks quick method (trash button)', () => {   
    createServiceProvider(fsp1);
    cy.visit(`${BASE_URL}/service-provider?page=1&limit=9999`);

    cy.contains(`${fsp1.title}`).should('be.visible');
    cy.get('button.btn-action-delete').last().click();
    cy.wait(800);    
    cy.contains('Confirmer').click();
    cy.wait(800);
    cy.contains(`Le fournisseur de service ${fsp1.title} a été supprimé avec succès !`).should('be.visible');
    cy.get('.alert-success > .close').click();
    cy.contains(`${fsp1.name}`).should('not.be.visible');
  });

  it('Should delete one service provider thanks long method (checkbox & delete button)', () => {
    createServiceProvider(fsp1);
    cy.visit(`${BASE_URL}/service-provider?page=1&limit=9999`);
    
    cy.contains(`${fsp1.title}`).should('be.visible');
    cy.get('input.delete-items').last().click();
    cy.contains('Supprimer').should('be.visible').click();
    cy.wait(800);
    cy.contains('Confirmer').click();
    cy.wait(800);
    cy.get('.alert-success > .close').click();
    cy.contains(`${fsp1.title}`).should('not.be.visible');
  });

  it('Should delete several service provider with uuid and old id', () => {
    createServiceProvider(fsp1);
    cy.visit(`${BASE_URL}/service-provider?page=1&limit=9999`);

    cy.contains(`${fsp1.title}`).should('be.visible');
    cy.get('input.delete-items').first().click();
    cy.get('input.delete-items').last().click();
    cy.contains('Supprimer').should('be.visible').click();
    cy.wait(800);
    cy.contains('Confirmer').click();
    cy.wait(800);
    cy.get('.alert-success > .close').click();
    cy.contains(`${fsp1.title}`).should('not.be.visible');
  });

  it('Should not delete service provider if action is cancel (checkbox & delete button)', () => {
    createServiceProvider(fsp1);
    cy.visit(`${BASE_URL}/service-provider?page=1&limit=9999`);

    cy.contains(`${fsp1.title}`).should('be.visible');
    cy.get('input.delete-items').first().click();
    cy.get('input.delete-items').last().click();
    cy.contains('Supprimer').should('be.visible').click();
    cy.wait(800);
    cy.contains('Annuler').click();
    cy.wait(800);
    cy.contains(`${fsp1.title}`).should('be.visible');
  });

  it('Should not delete service provider if action is cancel (trash button)', () => {
    cy.visit(`${BASE_URL}/service-provider?page=1&limit=9999`);

    cy.contains(`${fsp1.title}`).should('be.visible');
    cy.get('button.btn-action-delete').last().click();
    cy.wait(800);
    cy.contains('Annuler').click();
    cy.wait(800);
    cy.contains(`${fsp1.title}`).should('be.visible');

    cy.get('button.btn-action-delete').last().click();
    cy.wait(800);
    cy.contains('Confirmer').click();
    cy.wait(800);
    cy.get('.alert-success > .close').click();
  });

  afterEach(() => {
    cy.contains('jean_moust').click();
    cy.contains('Déconnexion').click();
  });
});
