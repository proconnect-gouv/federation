import 'cypress-file-upload';
import * as otplib from 'otplib';
import { SECRET_TOTP, BASE_URL, USER_OPERATOR, USER_PASS } from '../constants.util';

describe('update a service-provider', () => {
  beforeEach(() => {
    cy.visit(`${BASE_URL}`);
    cy.get('input[name="username"]').type(USER_OPERATOR);
    cy.get('input[name="password"]').type(USER_PASS);
    cy.get('button[type="submit"]').click();
  });

  describe('first step: create FS', () => {
    it('Should be able to add a fs ( all ) ', () => {
      cy.url().should('eq', `${BASE_URL}/service-provider`);
      cy.contains('Créer un fournisseur de service').click();

      // Fill in form
      cy.get('input[name=name]')
        .clear()
        .type('MyFirstFSCypress');
      cy.get('textarea[name=redirectUri]')
        .clear()
        .type('https://url.com');
      cy.get('textarea[name=redirectUriLogout]')
        .clear()
        .type('https://url.com/logout');
      cy.get('textarea[name=site]')
        .clear()
        .type('https://url.com');
      cy.get('textarea[name=emails]')
        .clear()
        .type('valenttin@gmail.com');
      cy.get('textarea[name=ipAddresses]')
        .clear()
        .type('192.0.0.0');

      cy.fixture('logos/valid_logo.png').then(logo => {
        cy.get('input[type=file]').upload({
          fileContent: logo,
          fileName: 'valid_logo.png',
          mimeType: 'image/png',
        });
      });

      cy.get('[type="radio"]')
        .check('public', { force: true });

      cy.get('form[name="fs-form"] button[type="submit"]')
        .click();

      cy.url().should('eq', `${BASE_URL}/service-provider`);
      cy.contains(`Le fournisseur de service MyFirstFSCypress a été créé avec succès !`)
    });
  });

  describe('Second step: update the FS', () => {
    it('Should be able to update a fs ( all ) ', () => {
      cy.visit(`${BASE_URL}/service-provider?page=1&limit=9000`)

      cy.contains(`MyFirstFSCypress`).should('be.visible');

      cy.get('a.btn-action-update').last().click();

      // Fill in form
      cy.get('input[name=name]')
        .clear()
        .type('MyFirstFSCypress');
      cy.get('textarea[name=redirectUri]')
        .clear()
        .type('https://url.com');
      cy.get('textarea[name=redirectUriLogout]')
        .clear()
        .type('https://url.com/logout');
      cy.get('textarea[name=site]')
        .clear()
        .type('https://url.com');
      cy.get('textarea[name=emails]')
        .clear()
        .type('valenttin@gmail.com');
      cy.get('textarea[name=ipAddresses]')
        .clear()
        .type('192.0.0.0');
      cy.get('[type="radio"]')
        .check('public', { force: true });

      cy.get('input[name="_totp"]').then(() => {
        const token = otplib.authenticator.generate(SECRET_TOTP);
        cy.get('input[name="_totp"]').type(token);
      });


      cy.get('input[name=name]').invoke('val').then(value => {
        expect(value).to.equal('MyFirstFSCypress');
      });

      cy.get('textarea[name=redirectUri]').invoke('val').then(value => {
        expect(value).to.equal('https://url.com');
      });

      cy.get('textarea[name=redirectUriLogout]').invoke('val').then(value => {
        expect(value).to.equal('https://url.com/logout');
      });

      cy.get('textarea[name=emails]').invoke('val').then(value => {
        expect(value).to.equal('valenttin@gmail.com');
      });

      cy.get('textarea[name=ipAddresses]').invoke('val').then(value => {
        expect(value).to.equal('192.0.0.0');
      });

      cy.get('form[name="fs-form"] button[type="submit"]')
        .click();

      cy.url().should('match', /^https:\/\/exploitation.docker.dev-franceconnect.fr\/service-provider\/[a-z0-9]{24}$/)
      cy.contains(`Le fournisseur de service MyFirstFSCypress a été modifié avec succès !`)
    });

    it('Should be able to update a fs ( name ) ', () => {
      cy.visit(`${BASE_URL}/service-provider?page=1&limit=9000`)

      cy.contains(`MyFirstFSCypress`).should('be.visible');
      cy.get('a.btn-action-update').last().click();

      // Fill in form
      cy.get('input[name=name]')
        .clear()
        .type('MyFirstFSCypressModificate');

      cy.get('input[name=name]').invoke('val').then(value => {
        expect(value).to.equal('MyFirstFSCypressModificate');
      });

      cy.get('input[name="_totp"]').then(() => {
        const token = otplib.authenticator.generate(SECRET_TOTP);
        cy.get('input[name="_totp"]').type(token);
      });

      cy.get('form[name="fs-form"] button[type="submit"]')
        .click();

      cy.contains(`Le fournisseur de service MyFirstFSCypressModificate a été modifié avec succès !`)
    });

    it('Should be able to update a fs ( urlRedirectUri ) ', () => {
      cy.visit(`${BASE_URL}/service-provider?page=1&limit=9000`)

      cy.contains(`MyFirstFSCypress`).should('be.visible');
      cy.get('a.btn-action-update').last().click();

      // Fill in form
      cy.get('textarea[name=redirectUri]')
        .clear()
        .type('https://urlModificate.com');

      cy.get('input[name="_totp"]').then(() => {
        const token = otplib.authenticator.generate(SECRET_TOTP);
        cy.get('input[name="_totp"]').type(token);
      });

      cy.get('textarea[name=redirectUri]').invoke('val').then(value => {
        expect(value).to.equal('https://urlModificate.com');
      });

      cy.get('form[name="fs-form"] button[type="submit"]')
        .click();

      cy.contains(`Le fournisseur de service MyFirstFSCypressModificate a été modifié avec succès !`)
    });

    it('Should be able to update a fs ( site ) ', () => {
      cy.visit(`${BASE_URL}/service-provider?page=1&limit=9000`)

      cy.contains(`MyFirstFSCypress`).should('be.visible');
      cy.get('a.btn-action-update').last().click();

      // Fill in form
      cy.get('textarea[name=site]')
        .clear()
        .type('https://siteModificate.com');

      cy.get('input[name="_totp"]').then(() => {
        const token = otplib.authenticator.generate(SECRET_TOTP);
        cy.get('input[name="_totp"]').type(token);
      });

      cy.get('textarea[name=site]').invoke('val').then(value => {
        expect(value).to.equal('https://siteModificate.com');
      });

      cy.get('form[name="fs-form"] button[type="submit"]')
        .click();

      cy.contains(`Le fournisseur de service MyFirstFSCypressModificate a été modifié avec succès !`)
    });

    it('Should be able to update a fs ( emails ) ', () => {
      cy.visit(`${BASE_URL}/service-provider?page=1&limit=9000`)

      cy.contains(`MyFirstFSCypress`).should('be.visible');
      cy.get('a.btn-action-update').last().click();

      // Fill in form
      cy.get('textarea[name=emails]')
        .clear()
        .type('notvalentin@gmail.com');

      cy.get('input[name="_totp"]').then(() => {
        const token = otplib.authenticator.generate(SECRET_TOTP);
        cy.get('input[name="_totp"]').type(token);
      });

      cy.get('form[name="fs-form"] button[type="submit"]')
        .click();

        cy.get('textarea[name=emails]').invoke('val').then(value => {
          expect(value).to.equal('notvalentin@gmail.com');
        });

      cy.contains(`Le fournisseur de service MyFirstFSCypressModificate a été modifié avec succès !`)
    });

    it('Should not be able to update a fs with an error( emails ) ', () => {
      cy.visit(`${BASE_URL}/service-provider?page=1&limit=9000`)

      cy.contains(`MyFirstFSCypress`).should('be.visible');
      cy.get('a.btn-action-update').last().click();

      // Fill in form
      cy.get('textarea[name=emails]')
        .clear()
        .type('**');

      cy.get('input[name="_totp"]').then(() => {
        const token = otplib.authenticator.generate(SECRET_TOTP);
        cy.get('input[name="_totp"]').type(token);
      });

      cy.contains(`Veuillez mettre des emails valides ( Ex: email@email.com )`)
    });

    it('Should not be able to update a fs with an error( site ) ', () => {
      cy.visit(`${BASE_URL}/service-provider?page=1&limit=9000`)

      cy.contains(`MyFirstFSCypress`).should('be.visible');
      cy.get('a.btn-action-update').last().click();

      // Fill in form
      cy.get('textarea[name=site]')
        .clear()
        .type('***');

      cy.get('input[name="_totp"]').then(() => {
        const token = otplib.authenticator.generate(SECRET_TOTP);
        cy.get('input[name="_totp"]').type(token);
      });

      cy.contains(`Veuillez mettre une URL valide ( Ex: https://site.com/ )`)
    });

    it('Should not be able to update a fs with an error( redirectUriLogout ) ', () => {
      cy.visit(`${BASE_URL}/service-provider?page=1&limit=9000`)

      cy.contains(`MyFirstFSCypress`).should('be.visible');
      cy.get('a.btn-action-update').last().click();

      // Fill in form
      cy.get('textarea[name=redirectUriLogout]')
        .clear()
        .type('****');
      cy.get('input[name="_totp"]').then(() => {
        const token = otplib.authenticator.generate(SECRET_TOTP);
        cy.get('input[name="_totp"]').type(token);
      });

      cy.contains(`Veuillez mettre une URL valide ( Ex: https://urlvalide.com/ )`)
    });

    it('Should not be able to update a fs with an error( redirectUri ) ', () => {
      cy.visit(`${BASE_URL}/service-provider?page=1&limit=9000`)

      cy.contains(`MyFirstFSCypress`).should('be.visible');
      cy.get('a.btn-action-update').last().click();

      // Fill in form
      cy.get('textarea[name=redirectUri]')
        .clear()
        .type('**');

      cy.get('input[name="_totp"]').then(() => {
        const token = otplib.authenticator.generate(SECRET_TOTP);
        cy.get('input[name="_totp"]').type(token);
      });

      cy.contains(`Veuillez mettre une URL valide ( Ex: https://urlvalide.com/ )`)
    });

    it('Should not be able to update a fs if TOTP is empty', () => {
      cy.visit(`${BASE_URL}/service-provider?page=1&limit=9000`)

      cy.contains(`MyFirstFSCypress`).should('be.visible');
      cy.get('a.btn-action-update').last().click();

      // Fill in form
      cy.get('input[name=name]')
        .clear()
        .type('MyFirstFSCypress');
      cy.get('textarea[name=redirectUri]')
        .clear()
        .type('https://url.com');
      cy.get('textarea[name=redirectUriLogout]')
        .clear()
        .type('https://url.com/logout');
      cy.get('textarea[name=site]')
        .clear()
        .type('https://url.com');
      cy.get('textarea[name=emails]')
        .clear()
        .type('valenttin@gmail.com');
      cy.get('textarea[name=ipAddresses]')
        .clear()
        .type('192.0.0.0');
      cy.get('[type="radio"]')
        .check('public', { force: true });

      cy.get('form[name="fs-form"] button[type="submit"]')
        .click();

      cy.contains(`Veuillez mettre un code TOTP valide.`)
    });

    it('Should not be able to update a fs if TOTP is wrong', () => {
      cy.visit(`${BASE_URL}/service-provider?page=1&limit=9000`)

      cy.contains(`MyFirstFSCypress`).should('be.visible');
      cy.get('a.btn-action-update').last().click();

      // Fill in form
      cy.get('input[name=name]')
        .clear()
        .type('MyFirstFSCypress');
      cy.get('textarea[name=redirectUri]')
        .clear()
        .type('https://url.com');
      cy.get('textarea[name=redirectUriLogout]')
        .clear()
        .type('https://url.com/logout');
      cy.get('textarea[name=site]')
        .clear()
        .type('https://url.com');
      cy.get('textarea[name=emails]')
        .clear()
        .type('valenttin@gmail.com');
      cy.get('textarea[name=ipAddresses]')
        .clear()
        .type('192.0.0.0');
      cy.get('[type="radio"]')
        .check('public', { force: true });

      cy.get('input[name="_totp"]').type('rrttt');

      cy.get('form[name="fs-form"] button[type="submit"]')
        .click();

      cy.contains(`Le TOTP saisi n'est pas valide`)
    });
  });
});
