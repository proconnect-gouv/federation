import { b64toBlob } from './service-provider.util';

const BASE_URL = Cypress.config('baseUrl');


export function createServiceProvider(serviceProviderInfo, configuration) {
  cy.url().should('eq', `${BASE_URL}/service-provider`);
  cy.contains('CrÃ©er un fournisseur de service').click();

  const spFields = (({
    name,
    signupId,
    redirectUri,
    redirectUriLogout,
    site,
    emails,
    ipAddresses,
  }) => ({ name, signupId, redirectUri, redirectUriLogout, site, emails, ipAddresses }))(
    serviceProviderInfo,
  );
  cy.formFill(spFields, configuration);

  // Fill in form
  // You cannot directly await the return of "fixtures" (not a real promise...)
  if (configuration.useLogo === true) {
    const {
      fileName,
      mimeType,
      encoding,
    } = serviceProviderInfo;

    cy.fixture(`logos/${fileName}`)
      .then(image => b64toBlob(image, mimeType))
      .then(fileContent => {
        cy.get('input[type=file]').upload({
          fileContent,
          fileName,
          mimeType,
          encoding,
        });
      });
  }

  cy.get('[type="radio"]').check('public', { force: true });
  cy.get('form[name="fs-form"] button[type="submit"]').click();
}
