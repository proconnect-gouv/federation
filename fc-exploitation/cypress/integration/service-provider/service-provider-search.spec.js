import { USER_OPERATOR, USER_PASS } from '../../../../shared/cypress/support/constants';

describe('Service provider search', () => {
  const BASE_URL = Cypress.config('baseUrl');
  before(() => cy.resetEnv('mongoFC'));
  beforeEach(() => {
    cy.login(USER_OPERATOR, USER_PASS);
  });

  describe('Succefull scenarios', () => {
    it('Should display a search input and a reset button', () => {
      cy.get('input[name=search]').should('be.visible');
      cy.url().should('eq', `${BASE_URL}/service-provider`);
    });

    it('Should display a search result by name', () => {
      cy.formType('input[name=search]', 'HEM');
      cy.get('#searchBtn').click();
      cy.contains('tbody > tr > th', `Marie de HEM - 1234567890`);
      cy.get('tbody').find('tr').should('have.length', 1);
      cy.url().should('eq', `${BASE_URL}/service-provider?search=HEM`);
    });

    it('Should display a search result by name not case sensitive', () => {
      cy.formType('input[name=search]', 'hem');
      cy.get('#searchBtn').click();
      cy.contains('tbody > tr > th', `Marie de HEM - 1234567890`);
      cy.get('tbody').find('tr').should('have.length', 1);
      cy.url().should('eq', `${BASE_URL}/service-provider?search=hem`);
    });
    
    it('Should display a search result by client_id', () => {
      cy.formType('input[name=search]', '28e9ed103d6b075d371303a8bc5');
      cy.get('#searchBtn').click();
      cy.contains('tbody > tr > th', `Marie de HEM - 1234567890`);
      cy.url().should('eq', `${BASE_URL}/service-provider?search=28e9ed103d6b075d371303a8bc5`);
    });

    it('Should display a search result by client_id not case sensitive', () => {
      cy.formType('input[name=search]', '28E9ED103D6B075D371303A8BC5');
      cy.get('#searchBtn').click();
      cy.contains('tbody > tr > th', `Marie de HEM - 1234567890`);
      cy.get('tbody').find('tr').should('have.length', 1);
      cy.url().should('eq', `${BASE_URL}/service-provider?search=28E9ED103D6B075D371303A8BC5`);
    });
  });

  describe('Failing scenarios', () => {
    it('Should display nothing when no service provider match the search', () => {
      cy.formType('input[name=search]', 'Myzox');
      cy.contains('tbody > tr > th').should('not.be.visible');
      cy.url().should('eq', `${BASE_URL}/service-provider`);
    })
  })
});