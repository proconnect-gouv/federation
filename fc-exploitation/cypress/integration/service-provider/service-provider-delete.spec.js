import 'cypress-file-upload';
import { getTotp } from '../../../../shared/cypress/integration/util/totp.util';
import { createServiceProvider } from './service-provider-create.util';
import { USER_OPERATOR, USER_PASS } from '../../../../shared/cypress/integration/util/constants.util';
import { login } from '../../../../shared/cypress/integration/util/login.util';
import { resetMongoFC } from '../../../../shared/cypress/integration/util/prepare.util';

function deleteLastServiceProvider() {
  cy.visit(`${Cypress.env('BASE_URL')}/service-provider?page=1&limit=9999`);
  cy.get('button.btn-action-delete').last().click();
  cy.wait(800);
  cy.get('#totpModal').then(async () => {
    const token = await getTotp('KVKFKRCPNZQUYMLXOVYDSQKJKZDTSRLD');
    cy.get('#totpModal').type(token);
  });
  cy.contains('Confirmer').click();
  cy.wait(800);
}

const basicConfiguration = {
  useLogo: false,
};

describe('Delete service provider', () => {
  before(resetMongoFC);
  const fs = {
    name: 'uniquefranceconnect',
    redirectUri: 'https://url.com',
    redirectUriLogout: 'https://url.com/logout',
    site: 'https://url.com',
    emails: 'titlen@gmail.com',
    idAdresses: '192.0.0.0',
    fileName: 'valid_logo.png',
    mimeType: 'image/png',
    encoding: 'utf8'
  }

  beforeEach(() => {
    login(USER_OPERATOR, USER_PASS)

    createServiceProvider(fs, basicConfiguration, Cypress.env('BASE_URL'));
    cy.visit(`${Cypress.env('BASE_URL')}/service-provider?page=1&limit=9999`);
    cy.contains(`${fs.name}`).should('be.visible');
  });

  afterEach(() => {
    cy.contains(`${USER_OPERATOR}`).click();
    cy.contains('Déconnexion').click();
  });

  it('If action is cancel (checkbox & delete button)', () => {
    cy.get('input.delete-items').first().click();
    cy.get('input.delete-items').last().click();
    cy.contains('Supprimer').should('be.visible').click();
    cy.wait(800);
    cy.contains('Annuler').click();
    cy.wait(800);
    cy.contains(`${fs.name}`).should('be.visible');
    deleteLastServiceProvider();
  });

  it('If action is cancel (trash button)', () => {
    cy.get('button.btn-action-delete').last().click();
    cy.wait(800);
    cy.contains('Annuler').click();
    cy.wait(800);
    cy.contains(`${fs.name}`).should('be.visible');
    deleteLastServiceProvider();
  });

  it('If totp is not correct or empty', () => {
    cy.get('button.btn-action-delete').last().click();
    cy.wait(800);
    cy.contains('Confirmer').click();
    cy.contains(`Le TOTP n'a pas été saisi`).should('be.visible');
    cy.get('#totpModal').type('000000');
    cy.contains('Confirmer').click();
    cy.wait(800);
    cy.contains(`Le TOTP saisi n'est pas valide`).should('be.visible');
    cy.visit(`${Cypress.env('BASE_URL')}/service-provider?page=1&limit=9999`);
    cy.contains(`${fs.name}`).should('be.visible');
    deleteLastServiceProvider();
  });

  it('Should delete one service provider thanks quick method (trash button)', () => {
    cy.get('button.btn-action-delete').last().click();
    cy.wait(800);
    cy.get('#totpModal').then(async () => {
      const token = await getTotp('KVKFKRCPNZQUYMLXOVYDSQKJKZDTSRLD');
      cy.get('#totpModal').type(token);
    });
    cy.contains('Confirmer').click();
    cy.wait(800);
    cy.contains(`Le fournisseur de service ${fs.name} a été supprimé avec succès !`).should('be.visible');
    cy.get('.alert-success > .close').click();
    cy.contains(`${fs.name}`).should('not.be.visible');
  });

  it('Should delete one service provider thanks long method (checkbox & delete button)', () => {
    cy.get('input.delete-items').last().click();
    cy.contains('Supprimer').should('be.visible').click();
    cy.wait(800);
    cy.get('#totpModal').then(async () => {
      const token = await getTotp('KVKFKRCPNZQUYMLXOVYDSQKJKZDTSRLD');
      cy.get('#totpModal').type(token);
    });
    cy.contains('Confirmer').click();
    cy.wait(800);
    cy.get('.alert-success > .close').click();
    cy.contains(`${fs.name}`).should('not.be.visible');
  });

  it('Should delete several service provider with uuid and old id', () => {
    cy.get('input.delete-items').first().click();
    cy.get('input.delete-items').last().click();
    cy.contains('Supprimer').should('be.visible').click();
    cy.wait(800);
    cy.get('#totpModal').then(async () => {
      const token = await getTotp('KVKFKRCPNZQUYMLXOVYDSQKJKZDTSRLD');
      cy.get('#totpModal').type(token);
    });
    cy.contains('Confirmer').click();
    cy.wait(800);
    cy.get('.alert-success > .close').click();
    cy.contains(`${fs.name}`).should('not.be.visible');
  });
});
