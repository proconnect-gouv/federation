import 'cypress-file-upload';
import { USER_OPERATOR, USER_PASS } from '../../../../shared/cypress/integration/util/constants.util';
import { login } from '../../../../shared/cypress/integration/util/login.util';
import { resetMongoFC } from '../../../../shared/cypress/integration/util/prepare.util';

describe('Service provider creation', () => {
  before(resetMongoFC);
  beforeEach(() => {
    login(USER_OPERATOR, USER_PASS);
  });

  describe('first step: create FS', () => {
    it('Should be able to add a fs ( all ) ', () => {
      cy.url().should('eq', `${Cypress.env('BASE_URL')}/service-provider`);
      cy.contains('Créer un fournisseur de service').click();

      // Fill in form
      cy.get('input[name=name]')
        .clear()
        .type('CypressFS');
      cy.get('textarea[name=redirectUri]')
        .clear()
        .type('https://url.com');
      cy.get('textarea[name=redirectUriLogout]')
        .clear()
        .type('https://url.com/logout');
      cy.get('textarea[name=site]')
        .clear()
        .type('https://url.com');
      cy.get('textarea[name=emails]')
        .clear()
        .type('valenttin@gmail.com');
      cy.get('textarea[name=ipAddresses]')
        .clear()
        .type('192.0.0.0');

      cy.fixture('logos/valid_logo.png').then(logo => {
        cy.get('input[type=file]').upload({
          fileContent: logo,
          fileName: 'valid_logo.png',
          mimeType: 'image/png',
        });
      });

      cy.get('[type="radio"]')
        .check('public', { force: true });

      cy.get('form[name="fs-form"] button[type="submit"]')
        .click();

      cy.url().should('eq', `${Cypress.env('BASE_URL')}/service-provider`);
      cy.contains(`Le fournisseur de service CypressFS a été créé avec succès !`)
    });

    it('I can see when my clientId is generate', () => {
      cy.visit(`${Cypress.env('BASE_URL')}/service-provider?page=1&limit=9000`)

      cy.contains(`CypressFS`).should('be.visible');
      cy.get('.time-client-id').last().then(item => {
        const todaysDate = Cypress.moment().format('DD/MM/YYYY');
        const test = item[0].textContent;
        expect(todaysDate).to.equal(test);
      });
    });

    it('I can see when my secret is generate', () => {
      cy.visit(`${Cypress.env('BASE_URL')}/service-provider?page=1&limit=9000`)

      cy.contains(`CypressFS`).should('be.visible');
      cy.get('.time-secret').last().then(item => {
        const todaysDate = Cypress.moment().format('DD/MM/YYYY');
        const test = item[0].textContent;
        expect(todaysDate).to.equal(test);
      });
    });
  });
});
