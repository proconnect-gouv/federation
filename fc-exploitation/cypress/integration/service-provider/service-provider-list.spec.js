import 'cypress-file-upload';
import { USER_OPERATOR, USER_PASS } from '../../../../shared/cypress/support/constants';
import { createServiceProvider } from './service-provider-create.util';

const BASE_URL = Cypress.config('baseUrl');

const configuration = {};

describe('Service provider creation', () => {
  before(() => cy.resetEnv('mongoFC'));
  beforeEach(() => {
    cy.login(USER_OPERATOR, USER_PASS);
  });

  describe('first step: create FS', () => {
    it('Should be able to add a fs ( all ) ', () => {
      createServiceProvider({
        name: 'CypressFS',
        redirectUri: 'https://url.com',
        redirectUriLogout: 'https://url.com/logout',
        site: 'https://url.com',
        emails: 'valenttin@gmail.com',
        ipAddresses: '192.0.0.0',
        fileName: 'valid_logo.png',
        mimeType: 'image/png',
      }, configuration);


      cy.url().should('eq', `${BASE_URL}/service-provider`);
      cy.contains(`Le fournisseur de service CypressFS a été créé avec succès !`)
    });

    it('I can see when my clientId is generate', () => {
      cy.visit(`/service-provider?page=1&limit=9000`)

      cy.contains(`CypressFS`).should('be.visible');
      cy.get('.time-client-id').last().then(item => {
        const todaysDate = Cypress.moment().format('DD/MM/YYYY');
        const test = item[0].textContent;
        expect(todaysDate).to.equal(test);
      });
    });

    it('I can see when my secret is generate', () => {
      cy.visit(`/service-provider?page=1&limit=9000`)

      cy.contains(`CypressFS`).should('be.visible');
      cy.get('.time-secret').last().then(item => {
        const todaysDate = Cypress.moment().format('DD/MM/YYYY');
        const test = item[0].textContent;
        expect(todaysDate).to.equal(test);
      });
    });
  });
});
