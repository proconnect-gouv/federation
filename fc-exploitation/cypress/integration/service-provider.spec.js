import 'cypress-file-upload';

const BASE_URL = 'https://exploitation.docker.dev-franceconnect.fr/';
const USER_ADMIN = 'jean_moust';
const USER_OPERATOR = 'jean_patoche';
const USER_PASS = 'georgesmoustaki';

describe('service-provider', () => {
  beforeEach(() => {
    cy.visit(`${BASE_URL}`);
    cy.get('input[name="username"]').type(USER_OPERATOR);
    cy.get('input[name="password"]').type(USER_PASS);
    cy.get('button[type="submit"]').click();
  });

  describe('create FS', () => {
    it('Should be able to add a fs with PNG logo', () => {
      cy.url().should('eq', 'https://exploitation.docker.dev-franceconnect.fr/service-provider');
      cy.contains('Créer un fournisseur de service').click();

      // Fill in form
      cy.get('input[name=name]')
        .clear()
        .type('MyFirstFS PNG');
      cy.get('textarea[name=redirectUri]')
        .clear()
        .type('https://url.com');
      cy.get('textarea[name=redirectUriLogout]')
        .clear()
        .type('https://url.com/logout');
      cy.get('input[name=site]')
        .clear()
        .type('https://url.com');
      cy.get('textarea[name=emails]')
        .clear()
        .type('valenttin@gmail.com');
      cy.get('textarea[name=ipAddresses]')
        .clear()
        .type('192.0.0.0');

      cy.fixture('logos/valid_logo.png').then(logo => {
        cy.get('input[type=file]').upload({
          fileContent: logo,
          fileName: 'valid_logo.png',
          mimeType: 'image/png',
        });
      });

      cy.get('[type="radio"]')
        .check('public', { force: true });

      cy.get('form[name="fs-form"] button[type="submit"]')
        .click();

      cy.url().should('eq', 'https://exploitation.docker.dev-franceconnect.fr/service-provider');
      cy.contains(`Le fournisseur de service MyFirstFS PNG a été créé avec succès !`);
    });

    it('Should be able to add a fs with JPG logo', () => {
      cy.url().should('eq', 'https://exploitation.docker.dev-franceconnect.fr/service-provider');
      cy.contains('Créer un fournisseur de service').click();

      // Fill in form
      cy.get('input[name=name]')
        .clear()
        .type('MyFirstFS JPG');
      cy.get('textarea[name=redirectUri]')
        .clear()
        .type('https://url.com');
      cy.get('textarea[name=redirectUriLogout]')
        .clear()
        .type('https://url.com/logout');
      cy.get('input[name=site]')
        .clear()
        .type('https://url.com');
      cy.get('textarea[name=emails]')
        .clear()
        .type('valenttin@gmail.com');
      cy.get('textarea[name=ipAddresses]')
        .clear()
        .type('192.0.0.0');

      cy.fixture('logos/valid_logo.jpg').then(logo => {
        cy.get('input[type=file]').upload({
          fileContent: logo,
          fileName: 'valid_logo.jpg',
          mimeType: 'image/jpg',
        });
      });

      cy.get('[type="radio"]')
        .check('public', { force: true });

      cy.get('form[name="fs-form"] button[type="submit"]')
        .click();

      cy.url().should('eq', 'https://exploitation.docker.dev-franceconnect.fr/service-provider');
      cy.contains(`Le fournisseur de service MyFirstFS JPG a été créé avec succès !`);
    });

    it('Should be able to add a fs with SVG logo', () => {
      cy.url().should('eq', 'https://exploitation.docker.dev-franceconnect.fr/service-provider');
      cy.contains('Créer un fournisseur de service').click();

      // Fill in form
      cy.get('input[name=name]')
        .clear()
        .type('MyFirstFS SVG');
      cy.get('textarea[name=redirectUri]')
        .clear()
        .type('https://url.com');
      cy.get('textarea[name=redirectUriLogout]')
        .clear()
        .type('https://url.com/logout');
      cy.get('input[name=site]')
        .clear()
        .type('https://url.com');
      cy.get('textarea[name=emails]')
        .clear()
        .type('valenttin@gmail.com');
      cy.get('textarea[name=ipAddresses]')
        .clear()
        .type('192.0.0.0');

      cy.fixture('logos/valid_logo.svg').then(logo => {
        cy.get('input[type=file]').upload({
          fileContent: logo,
          fileName: 'valid_logo.svg',
          mimeType: 'image/svg+xml',
          encoding: 'utf8',
        });
      });

      cy.get('[type="radio"]')
        .check('public', { force: true });

      cy.get('form[name="fs-form"] button[type="submit"]')
        .click();

      cy.url().should('eq', 'https://exploitation.docker.dev-franceconnect.fr/service-provider');
      cy.contains(`Le fournisseur de service MyFirstFS SVG a été créé avec succès !`);
    });

    it('Should be able to add a fs with GIF logo', () => {
      cy.url().should('eq', 'https://exploitation.docker.dev-franceconnect.fr/service-provider');
      cy.contains('Créer un fournisseur de service').click();

      // Fill in form
      cy.get('input[name=name]')
        .clear()
        .type('MyFirstFS GIF');
      cy.get('textarea[name=redirectUri]')
        .clear()
        .type('https://url.com');
      cy.get('textarea[name=redirectUriLogout]')
        .clear()
        .type('https://url.com/logout');
      cy.get('input[name=site]')
        .clear()
        .type('https://url.com');
      cy.get('textarea[name=emails]')
        .clear()
        .type('valenttin@gmail.com');
      cy.get('textarea[name=ipAddresses]')
        .clear()
        .type('192.0.0.0');

      cy.fixture('logos/valid_logo.gif').then(logo => {
        cy.get('input[type=file]').upload({
          fileContent: logo,
          fileName: 'valid_logo.gif',
          mimeType: 'image/gif',
        });
      });

      cy.get('[type="radio"]')
        .check('public', { force: true });

      cy.get('form[name="fs-form"] button[type="submit"]')
        .click();

      cy.url().should('eq', 'https://exploitation.docker.dev-franceconnect.fr/service-provider');
      cy.contains(`Le fournisseur de service MyFirstFS GIF a été créé avec succès !`);
    });

    it('should not create the FS if the logo is too big', () => {
      cy.url().should('eq', 'https://exploitation.docker.dev-franceconnect.fr/service-provider');
      cy.contains('Créer un fournisseur de service').click();

      // Fill in form
      cy.get('input[name=name]')
        .clear()
        .type('MyFirstFS');
      cy.get('textarea[name=redirectUri]')
        .clear()
        .type('https://url.com');
      cy.get('textarea[name=redirectUriLogout]')
        .clear()
        .type('https://url.com/logout');
      cy.get('input[name=site]')
        .clear()
        .type('https://url.com');
      cy.get('textarea[name=emails]')
        .clear()
        .type('valenttin@gmail.com');
      cy.get('textarea[name=ipAddresses]')
        .clear()
        .type('1.1.1.1');

      cy.fixture('logos/invalid_too_big_logo.jpg').then(logo => {
        cy.get('input[type=file]').upload({
          fileContent: logo,
          fileName: 'invalid_too_big_logo.jpg',
          mimeType: 'image/jpg',
        });
      });

      cy.get('[type="radio"]')
        .check('public', { force: true });

      cy.get('form[name="fs-form"] button[type="submit"]')
        .click();

      cy.contains('"statusCode":413,"error":"Payload Too Large","message":"File too large"');
    });

    it('should not create the FS if the file is not jpg/jpeg/png/gif/svg+xml', () => {
      cy.url().should('eq', 'https://exploitation.docker.dev-franceconnect.fr/service-provider');
      cy.contains('Créer un fournisseur de service').click();

      // Fill in form
      cy.get('input[name=name]')
        .clear()
        .type('MyFirstFS');
      cy.get('textarea[name=redirectUri]')
        .clear()
        .type('https://url.com');
      cy.get('textarea[name=redirectUriLogout]')
        .clear()
        .type('https://url.com/logout');
      cy.get('input[name=site]')
        .clear()
        .type('https://url.com');
      cy.get('textarea[name=emails]')
        .clear()
        .type('valenttin@gmail.com');
      cy.get('textarea[name=ipAddresses]')
        .clear()
        .type('1.1.1.1');

      cy.fixture('logos/not_an_image.md').then(logo => {
        cy.get('input[type=file]').upload({
          fileContent: logo,
          fileName: 'not_an_image.md',
          mimeType: 'text/markdown',
          encoding: 'utf8',
        });
      });

      cy.get('[type="radio"]')
        .check('public', { force: true });

      cy.get('form[name="fs-form"] button[type="submit"]')
        .click();

      cy.contains('Le format du logo fourni est incorrect');
    });

    it('should not create the FS if no logo was provided', () => {
      cy.url().should('eq', 'https://exploitation.docker.dev-franceconnect.fr/service-provider');
      cy.contains('Créer un fournisseur de service').click();

      // Fill in form
      cy.get('input[name=name]')
        .clear()
        .type('MyFirstFS NO LOGO');
      cy.get('textarea[name=redirectUri]')
        .clear()
        .type('https://url.com');
      cy.get('textarea[name=redirectUriLogout]')
        .clear()
        .type('https://url.com/logout');
      cy.get('input[name=site]')
        .clear()
        .type('https://url.com');
      cy.get('textarea[name=emails]')
        .clear()
        .type('valenttin@gmail.com');
      cy.get('textarea[name=ipAddresses]')
        .clear()
        .type('1.1.1.1');
      cy.get('[type="radio"]')
        .check('public', { force: true });

      cy.get('form[name="fs-form"] button[type="submit"]')
        .click();

      cy.contains('Le fournisseur de service MyFirstFS NO LOGO a été créé avec succès !');
    });

    it('should re-generate a csrf token if the form validation failed previously', () => {
      cy.url().should('eq', 'https://exploitation.docker.dev-franceconnect.fr/service-provider');
      cy.contains('Créer un fournisseur de service').click();

      // Fill in form
      cy.get('input[name=name]')
        .clear()
        .type('MyFirstFS');
      cy.get('textarea[name=redirectUri]')
        .clear()
        .type('https://url.com');
      cy.get('textarea[name=redirectUriLogout]')
        .clear()
        .type('https://url.com/logout');
      cy.get('input[name=site]')
        .clear()
        .type('https://url.com');
      cy.get('textarea[name=emails]')
        .clear()
        .type('valenttin@gmail.com');
      cy.get('textarea[name=ipAddresses]')
        .clear()
        .type('Obviously not an IP');

      cy.fixture('logos/valid_logo.png').then(logo => {
        cy.get('input[type=file]').upload({
          fileContent: logo,
          fileName: 'valid_logo.png',
          mimeType: 'image/png',
        });
      });

      cy.get('[type="radio"]')
        .check('public', { force: true });

      cy.get('form[name="fs-form"] button[type="submit"]')
        .click();

      cy.get('input[name="_csrf"]').should('not.have.value', '');
    });

    it('should not send the form if some required inputs are empty', () => {
      cy.url().should('eq', 'https://exploitation.docker.dev-franceconnect.fr/service-provider');
      cy.contains('Créer un fournisseur de service').click();

       // Fill in form
      cy.get('input[name=name]')
        .clear()
        .type('***');
      cy.get('textarea[name=redirectUri]')
        .clear()
        .type('***');
      cy.get('textarea[name=redirectUriLogout]')
        .clear()
        .type('***');
      cy.get('input[name=site]')
        .clear()
        .type('https://url.com');
      cy.get('textarea[name=emails]')
        .clear()
        .type('*****');
      cy.get('textarea[name=ipAddresses]')
        .clear()
        .type('****');
      cy.get('[type="radio"]')
        .check('public', { force: true });
      cy.get('form[name="fs-form"] button[type="submit"]')
        .click();

      // Should
      cy.contains(`Veuillez mettre un nom valide ( majuscule, minuscule, nombres et trait d'union )`).should('be.visible');
      cy.contains('Veuillez mettre une URL valide ( Ex: https://urlvalide.com/ )').should('be.visible');
      cy.contains('Veuillez mettre une URL valide ( Ex: https://urlvalide.com/ )').should('be.visible');
      cy.contains('Veuillez mettre des emails valides ( Ex: email@email.com )').should('be.visible');
      cy.contains('Veuillez mettre des ips valides ( Ex: 1.1.1.1 )').should('be.visible');

      cy.url().should('eq', 'https://exploitation.docker.dev-franceconnect.fr/service-provider/create');
    });
  });
});

