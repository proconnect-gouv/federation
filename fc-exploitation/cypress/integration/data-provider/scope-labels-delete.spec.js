import { USER_OPERATOR, USER_PASS } from '../../../../shared/cypress/integration/util/constants.util';
import { login } from '../../../../shared/cypress/integration/util/login.util';
import { 
  useMenuToFdPage,
  createScopeLabels,
  deleteScopeLabel
} from './data-provider.utils';
import { resetMongoFC } from '../../../../shared/cypress/integration/util/prepare.util';

describe('Delete a scope label', () => {
  before(resetMongoFC);
  let configuration;
  let scopeLabelsInfo;
  beforeEach(() => {
    configuration = {
      totp: true,
      _csrf: true,
    };
    login(USER_OPERATOR, USER_PASS);
    useMenuToFdPage();
  });
  it ('imply a delete icon', () => {
    scopeLabelsInfo = {
      scope: 'Seldon 97',
      label: 'Seldon Label',
      fd: 'DGFIP',
    }
    cy.get(`table`).should('be.visible');

    createScopeLabels(scopeLabelsInfo, configuration);
      cy.get('button[type="submit"]').click();
  
      cy.url().should('eq', `${Cypress.env('BASE_URL')}/data-provider/label`);
      cy.contains(`Le label ${scopeLabelsInfo.label} pour le scope ${scopeLabelsInfo.scope} a été créé avec succès !`);
      cy.get('.alert-success > .close').click();

    cy.contains(scopeLabelsInfo.scope).should('be.visible');
    cy.contains(scopeLabelsInfo.scope).parent('tr').find('.btn-action-delete').should('be.visible');

    // remove test label
    deleteScopeLabel(scopeLabelsInfo.scope, configuration);
    cy.get('a[class="btn btn-success btn-yes"]').click();
    cy.get('.alert-success').should('be.visible');
  });

  describe('Should be successful', () => {
    before(resetMongoFC);
    it ('if a valid totp is submit', () => {
      scopeLabelsInfo = {
        scope: 'Seldon 98',
        label: 'Seldon Label',
        fd: 'DGFIP',
      }
      cy.get(`table`).should('be.visible');
  
      createScopeLabels(scopeLabelsInfo, configuration);
      cy.get('button[type="submit"]').click();
  
      cy.url().should('eq', `${Cypress.env('BASE_URL')}/data-provider/label`);
      cy.contains(`Le label ${scopeLabelsInfo.label} pour le scope ${scopeLabelsInfo.scope} a été créé avec succès !`);
      cy.get('.alert-success > .close').click();

      deleteScopeLabel(scopeLabelsInfo.scope, configuration);
      cy.get('a[class="btn btn-success btn-yes"]').click();
      cy.url().should('eq', `${Cypress.env('BASE_URL')}/data-provider/label`);
      cy.get('.alert-success').should('be.visible');
    });

    it ('if annuler button is clicked', () => {
      scopeLabelsInfo = {
        scope: 'Seldon 99',
        label: 'Seldon Label',
        fd: 'DGFIP',
      }
      cy.get(`table`).should('be.visible');
  
      createScopeLabels(scopeLabelsInfo, configuration);
      cy.get('button[type="submit"]').click();
  
      cy.url().should('eq', `${Cypress.env('BASE_URL')}/data-provider/label`);
      cy.contains(`Le label ${scopeLabelsInfo.label} pour le scope ${scopeLabelsInfo.scope} a été créé avec succès !`);
      cy.get('.alert-success > .close').click();

      deleteScopeLabel(scopeLabelsInfo.scope, configuration);
      cy.wait(800);
      cy.get('a[class="btn btn-danger btn-no"]').click({force: true});
      cy.url().should('eq', `${Cypress.env('BASE_URL')}/data-provider/label`);
      cy.get('.alert-success').should('not.be.visible');

      // remove test label
      deleteScopeLabel(scopeLabelsInfo.scope, configuration);
      cy.get('a[class="btn btn-success btn-yes"]').click();
      cy.get('.alert-success').should('be.visible');
    });
  });
  
  describe('Should fail', () => {
    it ('if a invalid totp is submit', () => {
      configuration = {
        totp: true,
        _csrf: true,
      };
      scopeLabelsInfo = {
        scope: 'Seldon 100',
        label: 'Seldon Label',
        fd: 'DGFIP',
      }
      cy.get(`table`).should('be.visible');
  
      createScopeLabels(scopeLabelsInfo, configuration);
      cy.get('button[type="submit"]').click();
  
      cy.url().should('eq', `${Cypress.env('BASE_URL')}/data-provider/label`);
      cy.contains(`Le label ${scopeLabelsInfo.label} pour le scope ${scopeLabelsInfo.scope} a été créé avec succès !`);
      cy.get('.alert-success > .close').click();

      configuration.totp = false;

      deleteScopeLabel(scopeLabelsInfo.scope, configuration);

      cy.get('a[class="btn btn-success btn-yes"]').click();
      cy.url().should('eq', `${Cypress.env('BASE_URL')}/data-provider/label`);
      cy.get('.alert-success').should('not.be.visible');
    })
  })
})