import {
  USER_OPERATOR,
  USER_PASS,
} from '../../../../shared/cypress/support/constants';

const fdName = 'Fournisseur de données Mock - 1';

describe('Delete a data provider', () => {
  before(() => {
    Cypress.session.clearAllSavedSessions();
  });

  beforeEach(() => {
    cy.resetEnv('mongo');
  });

  beforeEach(() => {
    cy.clearBusinessLog();
    cy.login(USER_OPERATOR, USER_PASS);
    cy.visit(`/data-provider?search=${encodeURIComponent(fdName)}`);
  });

  it('checks TOTP', () => {
    cy.get('button.btn-action-delete').click();
    cy.contains('Confirmer').click();
    cy.contains(`Le TOTP n'a pas été saisi`).should('be.visible');

    cy.get('#totpModal').type('000000');
    cy.contains('Confirmer').click();
    cy.contains(`Le TOTP saisi n'est pas valide`).should('be.visible');

    cy.visit(`/data-provider`);
    cy.contains(fdName).should('be.visible');
  });
  
  it('can be canceled', () => {
    cy.get('button.btn-action-delete')
    .click();
    cy.contains('Annuler').should('be.visible');
    cy.contains('Annuler').click();
    
    cy.visit(`/data-provider`);
    cy.contains(fdName)
      .should('be.visible');
  });

  it('can succeed', () => {
    cy.get('button.btn-action-delete')
      .last()
      .click();

    cy.totp({ totp: true });
    cy.contains('Confirmer').click();

    cy.contains(
      `Le fournisseur de données ${fdName} a été supprimé avec succès !`,
    ).should('be.visible');
    cy.get('.alert-success > .close').click();
    cy.contains(fdName)
      .should('not.exist');

    cy.hasBusinessLog({
      entity: 'data-provider',
      action: 'delete',
      user: USER_OPERATOR,
      name: fdName,
    });
  });
});
