import { USER_OPERATOR, USER_PASS } from '../../../../shared/cypress/integration/util/constants.util';
import { login } from '../../../../shared/cypress/integration/util/login.util';
import { 
  useMenuToFdPage,
  createScopeLabels,
  updateScopeLabel
} from './data-provider.utils';
import { resetMongoFC } from '../../../../shared/cypress/integration/util/prepare.util';

describe('Update a scope label', () => {
  before(resetMongoFC);
  let configuration;

  describe('Should be successful', () => {
    beforeEach(() => {
      configuration = {
        totp: true,
        _csrf: true,
      };
      login(USER_OPERATOR, USER_PASS);
      useMenuToFdPage();
    });

    const scopeLabelsInfo = {
      scope: 'Seldon 227',
      label: 'Seldon Label',
      fd: 'DGFIP',
    }

    const scopeLabelsUpdatedInfo = {
      scope: 'New Seldon 72',
      label: 'Seldon Label',
      fd: 'DGFIP',
    }

    it('if a valid form is submit', () => {
      cy.get(`table`).should('be.visible');

      createScopeLabels(scopeLabelsInfo, configuration);
      cy.get('button[type="submit"]').click();

      cy.url().should('eq', `${Cypress.env('BASE_URL')}/data-provider/label`);
      cy.contains(`Le label ${scopeLabelsInfo.label} pour le scope ${scopeLabelsInfo.scope} a été créé avec succès !`);
      cy.get('.alert-success > .close').click();

      updateScopeLabel(scopeLabelsInfo.scope, scopeLabelsUpdatedInfo, configuration);
      cy.get('button[type="submit"]').click();

      cy.url().should('eq', `${Cypress.env('BASE_URL')}/data-provider/label`);
    });
  });

  describe('Should fail', () => {
    beforeEach(() => {
      login(USER_OPERATOR, USER_PASS);
      useMenuToFdPage();
    });

    it('if a valid form is submit but scope name already exist', () => {
      configuration = {
        totp: true,
        _csrf: true,
      };
      
      const totp = true;

      const scopeLabelsInfo = {
        scope: 'Seldon 227',
        label: 'Seldon Label',
        fd: 'DGFIP',
      }
  
      const scopeLabelsUpdatedInfo = {
        scope: 'New Seldon 72',
        label: 'Seldon Label',
        fd: 'DGFIP',
      }

      createScopeLabels(scopeLabelsInfo, configuration);
      cy.get('button[type="submit"]').click();
      cy.get('.alert-success > .close').click();

      updateScopeLabel(scopeLabelsInfo.scope, scopeLabelsUpdatedInfo, configuration);
      cy.get('button[type="submit"]').click();
      cy.contains(`Impossible de modifier le label`);
    });

    it('if a invalid form is submit with invalid totp', () => {
      configuration = {
        totp: true,
        _csrf: true,
      };

      const scopeLabelsInfo = {
        scope: 'Seldon 228',
        label: 'Seldon Label',
        fd: 'DGFIP',
      }
  
      const scopeLabelsUpdatedInfo = {
        scope: 'New Seldon 728',
        label: 'Seldon Label',
        fd: 'DGFIP',
      }
      
      createScopeLabels(scopeLabelsInfo, configuration);
      cy.get('button[type="submit"]').click();
      cy.get('.alert-success > .close').click();

      configuration.totp = false;

      updateScopeLabel(scopeLabelsInfo.scope, scopeLabelsUpdatedInfo, configuration,);
      cy.get('button[type="submit"]').click();

      cy.contains(`Le TOTP saisi n'est pas valide`);
    });
  })
});