import { getTotp } from '../../../../shared/cypress/integration/util/totp.util';
import { SECRET_TOTP } from '../../../../shared/cypress/integration/util/constants.util';

export function useMenuToFdPage() {
  cy.get('li .nav-link').contains('Fournisseurs de données').click();
}

export function createScopeLabels(scopeLabel, basicConfiguration) {
  cy.get('#create-fd-btn').click();
  fillForm(scopeLabel, basicConfiguration);
}

export function updateScopeLabel(name, scopeLabelsInfo, configuration) {
  cy.contains(name).should('be.visible');
  cy.contains(name).parent('tr').find('.btn-action-update').click();

  cy.contains(`Modifier le label`).should('be.visible');
  cy.get('input[name=scope]').should('have.value', name);

  fillForm(scopeLabelsInfo, configuration);
}

export  function deleteScopeLabel(name, configuration) {
  cy.contains(name).should('be.visible');
  cy.contains(name).parent('tr').find('.btn-action-delete').click();
  cy.get('form[name=deleteForm]').should('be.visible');
  
  if (configuration.totp) {
    cy.get('input[id="totpModal"]').then(async totp => {
      const token = await getTotp(SECRET_TOTP);
      cy.get('input[id="totpModal"]').type(token);
    });
  } else {
    cy.get('input[id="totpModal"]').clear().type('0000');
  }
}

function fillForm(scopeLabelInfo, configuration) {
  const { scope, label, fd } = scopeLabelInfo;
  // Fill in form
  if (scope) {
    cy.get('input[name=scope]')
      .clear()
      .type(`${scope}`);
  } else if (scope === '') {
    cy.get('input[name=scope]')
      .clear()
  }
  
  if (label) {
    cy.get('input[name=label]')
      .clear()
      .type(`${label}`);
  } else if (label === '') {
    cy.get('input[name=label]')
      .clear()
  }

  if (fd) {
    cy.get('select[name="fd"]').select(`${fd}`);
  }

  if (configuration.totp) {
    cy.get('input[name="_totp"]').then(async totp => {
      const token = await getTotp(SECRET_TOTP);
      cy.get('input[name="_totp"]').type(token);
    });
  } else {
    cy.get('input[name="_totp"]').type('000000');
  }
}
