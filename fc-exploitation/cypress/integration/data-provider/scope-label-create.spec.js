import { BASE_URL, USER_OPERATOR, USER_PASS } from '../../../../shared/cypress/integration/util/constants.util';
import { login } from '../../../../shared/cypress/integration/util/login.util';
import { useMenuToFdPage,  createScopeLabels } from './data-provider.utils';

describe('Add new scope label', () => {
  let basicConfiguration;

  beforeEach(() => {
    basicConfiguration = {
      totp: true,
      _csrf: true,
    };
    login(USER_OPERATOR, USER_PASS);
    useMenuToFdPage();
  });

  describe('Should be successful', () => {
    it('if when click to "Fournisseur de données" button, page show a list of scope label', () => {
      cy.get(`#fd-table`).should('be.visible');
    });

    it('if a valid form is submit', () => {
      const scopeLabel = {
        scope: 'Seldon',
        label: 'Seldon Label',
        fd: 'DGFIP',
      };
      console.log(BASE_URL)
      createScopeLabels(scopeLabel, basicConfiguration);
      cy.get('button[type="submit"]').click();   

      cy.contains(`Le label ${scopeLabel.label} pour le scope ${scopeLabel.scope} a été créé avec succès !`);
    });
  });

  describe('Should fail', () => {
    it('if a valid form is submit but scope name already exist', () => {
      const scopeLabel = {
        scope: 'Seldon',
        label: 'Seldon Label',
        fd: 'DGFIP',
      };

      createScopeLabels(scopeLabel, basicConfiguration);
      cy.get('button[type="submit"]').click();
 
      cy.contains(`Impossible d'enregistrer le label`);
    });

    it('if a invalid form is submit with invalid totp', () => {
      const scopeLabel = {
        scope: 'Seldon1',
        label: 'Seldon1 Label',
        fd: 'DGFIP',
      };
      basicConfiguration.totp = false;
      createScopeLabels(scopeLabel, basicConfiguration);
      cy.get('button[type="submit"]').click();

      cy.contains(`Le TOTP saisi n'est pas valide`);
    });

    it('if scope field is empty', () => {
      const scopeLabel = {
        label: 'Seldon2 Label',
        fd: 'DGFIP',
      };

      createScopeLabels(scopeLabel, basicConfiguration);
      cy.get('button[type="submit"]').click();
      
      cy.get('input[name="scope"]').should('have.class', 'is-invalid');
    });

    it('if label field is empty', () => {
      const scopeLabel = {
        scope: 'Seldon2',
        fd: 'DGFIP',
      };

      createScopeLabels(scopeLabel, basicConfiguration, BASE_URL);
      cy.get('button[type="submit"]').click();

      cy.get('input[name="label"]').should('have.class', 'is-invalid');
    });

    it('if fd field is empty', () => {
      const scopeLabel = {
        scope: 'Seldon2',
        label: 'Seldon2 Label',
        fd: 'Choix'
      };

      createScopeLabels(scopeLabel, basicConfiguration);

      cy.get('select[name="fd"]').should('have.class', 'is-invalid');
    });
  });
});
