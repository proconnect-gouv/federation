import {
  USER_OPERATOR,
  USER_PASS,
} from '../../../../shared/cypress/support/constants';

const BASE_URL = Cypress.config('baseUrl');

describe('Add new scope label', () => {
  before(() => cy.resetEnv('mongoFC'));
  let basicConfiguration;

  beforeEach(() => {
    basicConfiguration = {
      totp: true,
    };
    cy.clearBusinessLog();

    cy.login(USER_OPERATOR, USER_PASS);
    cy.get('li .nav-link')
      .contains('Fournisseurs de données')
      .click();
  });

  describe('Should be successful', () => {
    it('if when click to "Fournisseur de données" button, page show a list of scope label', () => {
      cy.get(`table`).should('be.visible');
    });

    it('if a valid form is submited', () => {
      const id = Math.random();
      cy.get('#create-fd-btn').click();
      cy.formFill(
        {
          label: 'Seldon Label',
          scope: `Seldon ${id}`,
          fd: 'DGFIP',
        },
        basicConfiguration,
      );

      cy.get('button[type="submit"]').click();
      cy.url().should('eq', `${BASE_URL}/data-provider/label`);
      cy.contains(
        `Le label Seldon Label pour le scope Seldon ${id} a été créé avec succès !`,
      );
      cy.hasBusinessLog({
        entity: 'scope',
        action: 'create',
        user: USER_OPERATOR,
        name: `Seldon ${id}`,
      });
    });
  });

  describe('Should fail', () => {
    it('if a valid form is submited but scope name already exist', () => {
      cy.get('#create-fd-btn').click();
      cy.formFill(
        {
          label: 'OpenID label',
          scope: `openid`,
          fd: 'IDENTITY',
        },
        basicConfiguration,
      );

      cy.get('button[type="submit"]').click();
      cy.url().should('eq', `${BASE_URL}/data-provider/label/create`);
      cy.contains(`Impossible d'enregistrer le label`);
    });

    it('if a valid form is submited with invalid totp', () => {
      cy.get('#create-fd-btn').click();
      cy.formFill(
        {
          scope: `Seldon ${Math.random()}`,
          label: 'Seldon1 Label',
          fd: 'DGFIP',
        },
        Object.assign({}, basicConfiguration, { totp: false }),
      );

      cy.get('button[type="submit"]').click();
      cy.url().should('eq', `${BASE_URL}/data-provider/label/create`);
      cy.contains(`Le TOTP saisi n'est pas valide`);
    });

    it('if scope field is empty', () => {
      cy.get('#create-fd-btn').click();
      cy.formFill(
        {
          label: 'Seldon2 Label',
          fd: 'DGFIP',
        },
        Object.assign({}, basicConfiguration, { typeEvent: true }),
      );

      cy.get('button[type="submit"]').click();

      cy.url().should('eq', `${BASE_URL}/data-provider/label/create`);
      cy.get('input[name="scope"]').should('have.class', 'is-invalid');
    });

    it('if label field is empty', () => {
      cy.get('#create-fd-btn').click();
      cy.formFill(
        {
          scope: `Seldon ${Math.random()}`,
          fd: 'DGFIP',
        },
        basicConfiguration,
      );

      cy.get('button[type="submit"]').click();
      cy.get('input[name="label"]').should('have.class', 'is-invalid');
    });
  });
});
