import 'cypress-file-upload';
import { getTotp } from '../util/totp.util';
import { createIdentityProvider } from './identity-provider.util';
import { BASE_URL, USER_OPERATOR, USER_PASS } from '../util/constants.util';
import { login } from '../util/login.util';
import { resetMongoFC } from '../util/prepare.util';

const basicConfiguration = {
  totp: true,
  _csrf: true,
};

before(resetMongoFC);

describe('Delete identity provider', () => {
  const fi = {
    name: 'FIaSupprimer',
    title: 'Fi à supprimer',
    url: 'https://issuer.fr',
    authorizationUrl: 'https://issuer.fr/auth',
    tokenUrl: 'https://issuer.fr/token',
    userInfoUrl: 'https://issuer.fr/me',
    statusUrl: 'https://issuer.fr/state',
    jwksUrl: 'https://issuer.fr/discovery',
    clientId: '09a1a257648c1742c74d6a3d84b31943',
    clientSecret: '1234567890AZERTYUIOP',
    messageToDisplayWhenInactive: 'SUPER MESSAGE !!!',
    redirectionTargetWhenInactive: 'https://issuer.fr/promo',
    alt: 'MonFI Image',
    image: 'AliceM.svg',
    imageFocus: 'AliceM.svg',
    trustedIdentity: 'false',
    eidas: 2,
    order: 1,
    emails: 'sherman@kaliop.com\nvbonnard@kaliopmail.com',
    specificText:
      "Veuillez fournir une capture d'écran de votre page de profil !",
  };

  before(() => {
    login(USER_OPERATOR, USER_PASS);
    cy.visit(`${BASE_URL}/identity-provider`);
    createIdentityProvider(fi, basicConfiguration, BASE_URL);
    cy.visit(`${BASE_URL}/identity-provider`);
    cy.contains(`${fi.name}`).should('be.visible');
  });

  beforeEach(() => {
    login(USER_OPERATOR, USER_PASS);
    cy.visit(`${BASE_URL}/identity-provider`);
    cy.contains(`${fi.name}`).should('be.visible');
  });

  after(() => {
    cy.contains(`${USER_OPERATOR}`).click();
    cy.contains('Déconnexion').click();
  });

  it('Does not delete if action is cancel', () => {
    cy.get(
      `form[data-element-title="${fi.title}"] button[type="submit"]`,
    ).click();
    cy.wait(800);
    cy.contains('Annuler').click();
    cy.visit(`${BASE_URL}/identity-provider`);
    cy.contains(`${fi.name}`).should('be.visible');
  });

  it('Does not delete if totp is not correct or empty', () => {
    cy.get(
      `form[data-element-title="${fi.title}"] button[type="submit"]`,
    ).click();
    cy.wait(800);
    cy.contains('Confirmer').click();
    cy.contains(`Le TOTP n'a pas été saisi`).should('be.visible');
    cy.get('#totpModal').type('000000');
    cy.contains('Confirmer').click();
    cy.wait(800);
    cy.contains(`Le TOTP saisi n'est pas valide`).should('be.visible');
    cy.visit(`${BASE_URL}/identity-provider?page=1&limit=9999`);
    cy.contains(`${fi.name}`).should('be.visible');
  });

  it('Should delete one identity provider', () => {
    cy.get(
      `form[data-element-title="${fi.title}"] button[type="submit"]`,
    ).click();
    cy.wait(800);
    cy.get('#totpModal').then(async () => {
      const token = await getTotp('KVKFKRCPNZQUYMLXOVYDSQKJKZDTSRLD');
      cy.get('#totpModal').type(token);
    });
    cy.contains('Confirmer').click();
    cy.wait(800);
    cy.contains(
      `Le fournisseur d'identité ${fi.name} a été supprimé avec succès !`,
    ).should('be.visible');
    cy.get('.alert-success > .close').click();
    cy.contains(`${fi.name}`).should('not.be.visible');
  });
});
