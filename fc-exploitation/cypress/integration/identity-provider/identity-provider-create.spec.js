import {
  USER_OPERATOR,
  USER_PASS,
} from '../../../../shared/cypress/support/constants';
import { createIdentityProvider } from './identity-provider.util';

const BASE_URL = Cypress.config('baseUrl');

describe('Identity provider creation', () => {
  let basicConfiguration;

  before(() => cy.resetEnv('mongoFC'));
  beforeEach(() => {
    basicConfiguration = {
      totp: true,
      _csrf: true,
      fast: true,
    };
    cy.login(USER_OPERATOR, USER_PASS);
    cy.visit(`/identity-provider`);
  });

  describe('Should succeed', () => {
    it('if all fields are provided', () => {
      const fi = {
        name: 'MonSuperFI',
        title: 'Mon Super FI mais mieux écrit',
        issuer: 'https://issuer.fr',
        authorizationUrl: 'https://issuer.fr/auth',
        tokenUrl: 'https://issuer.fr/token',
        userInfoUrl: 'https://issuer.fr/me',
        statusUrl: 'https://issuer.fr/state',
        jwksUrl: 'https://issuer.fr/jwks',
        clientId: '09a1a257648c1742c74d6a3d84b31943',
        clientSecret: '1234567890AZERTYUIOP',
        messageToDisplayWhenInactive: 'SUPER MESSAGE !!!',
        redirectionTargetWhenInactive: 'https://issuer.fr/promo',
        alt: 'MonFI Image',
        image: 'AliceM.svg',
        imageFocus: 'AliceM.svg',
        trustedIdentity: 'false',
        eidas: 2,
        order: 1,
        emails: 'sherman@kaliop.com\nvbonnard@kaliopmail.com',
        specificText:
          "Veuillez fournir une capture d'écran de votre page de profil !",
      };
      createIdentityProvider(fi, basicConfiguration);

      cy.url().should('eq', `${BASE_URL}/identity-provider`);
      cy.contains(
        `Le fournisseur d'identité MonSuperFI a été créé avec succès !`,
      ).should('be.visible');
      cy.get('.alert-success > .close').click();
    });

    it('if only mandatory fields are provided', () => {
      const fi = {
        name: 'MonSuperFI-2',
        title: 'Mon Super FI 2 mais mieux écrit',
        issuer: 'https://issuer.fr',
        authorizationUrl: 'https://issuer.fr/auth',
        tokenUrl: 'https://issuer.fr/token',
        userInfoUrl: 'https://issuer.fr/me',
        clientId: '09a1a257648c1742c74d6a3d84b31943',
        clientSecret: '1234567890AZERTYUIOP',
        emails: 'sherman@kaliop.com\nvbonnard@kaliopmail.com',
      };
      createIdentityProvider(fi, basicConfiguration);

      cy.url().should('eq', `${BASE_URL}/identity-provider`);
      cy.contains(
        `Le fournisseur d'identité MonSuperFI-2 a été créé avec succès !`,
      ).should('be.visible');
      cy.get('.alert-success > .close').click();
    });

    it('if title contains authorized special chars', () => {
      const fi = {
        name: 'MonSuperFI-3',
        title: "Mon FI à l'extrême: plein de _ & de œ!",
        issuer: 'https://issuer.fr',
        authorizationUrl: 'https://issuer.fr/auth',
        tokenUrl: 'https://issuer.fr/token',
        userInfoUrl: 'https://issuer.fr/me',
        clientId: '09a1a257648c1742c74d6a3d84b31943',
        clientSecret: '1234567890AZERTYUIOP',
        emails: 'sherman@kaliop.com\nvbonnard@kaliopmail.com',
      };
      createIdentityProvider(fi, basicConfiguration);

      cy.url().should('eq', `${BASE_URL}/identity-provider`);
      cy.contains(
        `Le fournisseur d'identité MonSuperFI-3 a été créé avec succès !`,
      ).should('be.visible');
      cy.get('.alert-success > .close').click();
    });
  });

  describe('Should fail', () => {
    it('if no field was filled', () => {
      const fi = {};

      createIdentityProvider(fi, basicConfiguration);
      cy.url().should(
        'eq',
        `${BASE_URL}/identity-provider/create`,
      );
      cy.contains(
        `Veuillez mettre un titre valide ( majuscule, minuscule, nombres et '.:_/!+- [espace] )`,
      ).should('be.visible');
      cy.contains(
        `Veuillez mettre un titre valide ( majuscule, minuscule, nombres et '.:_/!+- [espace] )`,
      ).should('be.visible');
      cy.contains(
        `Veuillez mettre une issuer URL valide au format https://issuer.fr`,
      ).should('be.visible');
      cy.contains(
        `Veuillez mettre une authorization URL valide au format https://issuer.fr/auth`,
      ).should('be.visible');
      cy.contains(
        `Veuillez mettre une token URL valide au format https://issuer.fr/token`,
      ).should('be.visible');
      cy.contains(
        `Veuillez mettre une userInfo URL valide au format https://issuer.fr/userinfo`,
      ).should('be.visible');
      cy.contains(`Veuillez saisir un clientId valide`).should('be.visible');
      cy.contains(`Veuillez saisir un client Secret valide`).should(
        'be.visible',
      );
      cy.contains(`Veuillez saisir au moins un email`).should('be.visible');
    });

    it('if the name is already taken', () => {
      const fi = {
        name: 'MonSuperFI-2',
        title: 'Mon Super FI 2 mais mieux écrit',
        issuer: 'https://issuer.fr',
        authorizationUrl: 'https://issuer.fr/auth',
        tokenUrl: 'https://issuer.fr/token',
        userInfoUrl: 'https://issuer.fr/me',
        clientId: '09a1a257648c1742c74d6a3d84b31943',
        clientSecret: '1234567890AZERTYUIOP',
        emails: 'sherman@kaliop.com\nvbonnard@kaliopmail.com',
      };

      createIdentityProvider(fi, basicConfiguration);
      cy.url().should(
        'eq',
        `${BASE_URL}/identity-provider/create`,
      );
      cy.contains(
        `E11000 duplicate key error collection: fc.provider index: name_1 dup key: { : "MonSuperFI-2" }`,
      ).should('be.visible');
    });

    it('if the title contains invalid chars', () => {
      const fi = {
        name: 'MonSuperFI-2',
        title: 'Mon Super avec un < dedans',
        issuer: 'https://issuer.fr',
        authorizationUrl: 'https://issuer.fr/auth',
        tokenUrl: 'https://issuer.fr/token',
        userInfoUrl: 'https://issuer.fr/me',
        clientId: '09a1a257648c1742c74d6a3d84b31943',
        clientSecret: '1234567890AZERTYUIOP',
        emails: 'sherman@kaliop.com\nvbonnard@kaliopmail.com',
      };

      createIdentityProvider(fi, basicConfiguration);
      cy.url().should('eq', `${BASE_URL}/identity-provider/create`);
      cy.contains(
        `Veuillez mettre un titre valide ( majuscule, minuscule, nombres et '.:_/!+- [espace] )`,
      ).should('be.visible');
    });

    it('if the totp is invalid', () => {
      const fi = {
        name: 'MonSuperFI-3',
        title: 'Mon Super FI 3 mais mieux écrit',
        issuer: 'https://issuer.fr',
        authorizationUrl: 'https://issuer.fr/auth',
        tokenUrl: 'https://issuer.fr/token',
        userInfoUrl: 'https://issuer.fr/me',
        clientId: '09a1a257648c1742c74d6a3d84b31943',
        clientSecret: '1234567890AZERTYUIOP',
        emails: 'sherman@kaliop.com\nvbonnard@kaliopmail.com',
      };

      basicConfiguration.totp = false;

      createIdentityProvider(fi, basicConfiguration);
      cy.url().should(
        'eq',
        `${BASE_URL}/identity-provider/create`,
      );
      cy.contains(`Le TOTP saisi n'est pas valide`).should('be.visible');
    });
  });
});
