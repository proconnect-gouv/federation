import * as otplib from 'otplib';
import { SECRET_TOTP } from '../constants.util';

export function createIdentityProvider(identityProviderInfo, configuration, baseUrl) {
  cy.url().should('eq', `${baseUrl}/identity-provider`);
  cy.contains("Créer un fournisseur d'identité").click();
  
  fillForm(identityProviderInfo, configuration);

  cy.get('form[name="fi-form"] button[type="submit"]')
    .click();
}

export function updateIdentityProvider(name, identityProviderUpdateInfo, configuration, baseUrl) {
  cy.url().should('eq', `${baseUrl}/identity-provider?page=1&limit=9001`);

  cy.contains(name).should('be.visible');
  cy.contains(name).parent('tr').find('.btn-action-update').click();

  cy.contains(`Modifier le fournisseur d'identité:`).should('be.visible');
  cy.get('input[name=name]').should('have.value', name);
  
  fillForm(identityProviderUpdateInfo, configuration);

  cy.get('form[name="fi-form"] button[type="submit"]')
    .click();
}

export function assertFormValues(identityProviderInfo) {
  // Fill in form
  if (identityProviderInfo.name) {
    cy.get('input[name=name]')
      .should('have.value', `${identityProviderInfo.name}`);
  }
  if (identityProviderInfo.title) {
    cy.get('input[name=title]')
      .should('have.value', `${identityProviderInfo.title}`);
  }
  if (identityProviderInfo.url) {
    cy.get('input[name=url]')
      .should('have.value', `${identityProviderInfo.url}`);
  }
  if (identityProviderInfo.authorizationUrl) {
    cy.get('input[name=authorizationUrl]')
      .should('have.value', `${identityProviderInfo.authorizationUrl}`);
  }
  if (identityProviderInfo.tokenUrl) {
    cy.get('input[name=tokenUrl]')
      .should('have.value', `${identityProviderInfo.tokenUrl}`);
  }
  if (identityProviderInfo.userInfoUrl) {
    cy.get('input[name=userInfoUrl]')
      .should('have.value', `${identityProviderInfo.userInfoUrl}`);
  }
  if (identityProviderInfo.statusUrl) {
    cy.get('input[name=statusUrl]')
      .should('have.value', `${identityProviderInfo.statusUrl}`);
  }
  if (identityProviderInfo.jwksUrl) {
    cy.get('input[name=jwksUrl]')
      .should('have.value', `${identityProviderInfo.jwksUrl}`);
  }
  if (identityProviderInfo.clientId) {
    cy.get('input[name=clientId]')
      .should('have.value', `${identityProviderInfo.clientId}`);
  }
  if (identityProviderInfo.clientSecret) {
    cy.get('input[name=clientSecret]')
      .should('have.value', `${identityProviderInfo.clientSecret}`);
  }
  if (identityProviderInfo.display) {
    cy.get(`input[name=display][value=${identityProviderInfo.display}]`)
      .should('be.checked');
  }
  if (identityProviderInfo.active) {
    cy.get(`input[name=active][value=${identityProviderInfo.active}]`)
      .should('be.checked');
  }
  if (identityProviderInfo.messageToDisplayWhenInactive) {
    cy.get('input[name=messageToDisplayWhenInactive]')
      .should('have.value', `${identityProviderInfo.messageToDisplayWhenInactive}`);
  }
  if (identityProviderInfo.redirectionTargetWhenInactive) {
    cy.get('input[name=redirectionTargetWhenInactive]')
      .should('have.value', `${identityProviderInfo.redirectionTargetWhenInactive}`);
  }
  if (identityProviderInfo.alt) {
    cy.get('input[name=alt]')
      .should('have.value', `${identityProviderInfo.alt}`);
  }
  if (identityProviderInfo.image) {
    cy.get('input[name=image]')
      .should('have.value', `${identityProviderInfo.image}`);
  }
  if (identityProviderInfo.imageFocus) {
    cy.get('input[name=imageFocus]')
      .should('have.value', `${identityProviderInfo.imageFocus}`);
  }
  if (identityProviderInfo.trustedIdentity) {
    cy.get(`input[name=trustedIdentity][value=${identityProviderInfo.trustedIdentity}]`)
      .should('be.checked');
  }
  if (identityProviderInfo.eidas) {
    cy.get('select[name=eidas]')
      .should('have.value', `${identityProviderInfo.eidas}`);
  }
  if (identityProviderInfo.order) {
    cy.get('input[name=order]')
      .should('have.value', `${identityProviderInfo.order}`);
  }
  if (identityProviderInfo.emails) {
    cy.get('textarea[name=emails]')
      .should('have.value', `${identityProviderInfo.emails}`);
  }
  if (identityProviderInfo.specificText) {
    cy.get('input[name=specificText]')
      .should('have.value', `${identityProviderInfo.specificText}`);
  }
}

function fillForm(identityProviderInfo, configuration) {
  // Fill in form
  if (identityProviderInfo.name) {
    cy.get('input[name=name]')
      .clear()
      .type(`${identityProviderInfo.name}`);
  } else if (identityProviderInfo.name === '') {
    cy.get('input[name=name]')
      .clear()
  }
  if (identityProviderInfo.title) {
    cy.get('input[name=title]')
      .clear()
      .type(`${identityProviderInfo.title}`);
  } else if (identityProviderInfo.title === '') {
    cy.get('input[name=title]')
      .clear()
  }
  if (identityProviderInfo.url) {
    cy.get('input[name=url]')
      .clear()
      .type(`${identityProviderInfo.url}`);
  } else if (identityProviderInfo.url === '') {
    cy.get('input[name=url]')
      .clear()
  }
  if (identityProviderInfo.authorizationUrl) {
    cy.get('input[name=authorizationUrl]')
      .clear()
      .type(`${identityProviderInfo.authorizationUrl}`);
  } else if (identityProviderInfo.authorizationUrl === '') {
    cy.get('input[name=authorizationUrl]')
      .clear()
  }
  if (identityProviderInfo.tokenUrl) {
    cy.get('input[name=tokenUrl]')
      .clear()
      .type(`${identityProviderInfo.tokenUrl}`);
  } else if (identityProviderInfo.tokenUrl === '') {
    cy.get('input[name=tokenUrl]')
      .clear()
  }
  if (identityProviderInfo.userInfoUrl) {
    cy.get('input[name=userInfoUrl]')
      .clear()
      .type(`${identityProviderInfo.userInfoUrl}`);
  } else if (identityProviderInfo.userInfoUrl === '') {
    cy.get('input[name=userInfoUrl]')
      .clear()
  }
  if (identityProviderInfo.statusUrl) {
    cy.get('input[name=statusUrl]')
      .clear()
      .type(`${identityProviderInfo.statusUrl}`);
  } else if (identityProviderInfo.statusUrl === '') {
    cy.get('input[name=statusUrl]')
      .clear()
  }
  if (identityProviderInfo.jwksUrl) {
    cy.get('input[name=jwksUrl]')
      .clear()
      .type(`${identityProviderInfo.jwksUrl}`);
  } else if (identityProviderInfo.jwksUrl === '') {
    cy.get('input[name=jwksUrl]')
      .clear()
  }
  if (identityProviderInfo.clientId) {
    cy.get('input[name=clientId]')
      .clear()
      .type(`${identityProviderInfo.clientId}`);
  } else if (identityProviderInfo.clientId === '') {
    cy.get('input[name=clientId]')
      .clear()
  }
  if (identityProviderInfo.clientSecret) {
    cy.get('input[name=clientSecret]')
      .clear()
      .type(`${identityProviderInfo.clientSecret}`);
  } else if (identityProviderInfo.clientSecret === '') {
    cy.get('input[name=clientSecret]')
      .clear()
  }
  if (identityProviderInfo.display) {
    cy.get('input[name=display]')
      .check(identityProviderInfo.display, { force: true });
  }
  if (identityProviderInfo.active) {
    cy.get('input[name=active]')
      .check(identityProviderInfo.active, { force: true });
  }
  if (identityProviderInfo.messageToDisplayWhenInactive) {
    cy.get('input[name=messageToDisplayWhenInactive]')
      .clear()
      .type(`${identityProviderInfo.messageToDisplayWhenInactive}`);
  } else if (identityProviderInfo.messageToDisplayWhenInactive === '') {
    cy.get('input[name=messageToDisplayWhenInactive]')
      .clear()
  }
  if (identityProviderInfo.redirectionTargetWhenInactive) {
    cy.get('input[name=redirectionTargetWhenInactive]')
      .clear()
      .type(`${identityProviderInfo.redirectionTargetWhenInactive}`);
  } else if (identityProviderInfo.redirectionTargetWhenInactive === '') {
    cy.get('input[name=redirectionTargetWhenInactive]')
      .clear()
  }
  if (identityProviderInfo.alt) {
    cy.get('input[name=alt]')
      .clear()
      .type(`${identityProviderInfo.alt}`);
  } else if (identityProviderInfo.alt === '') {
    cy.get('input[name=alt]')
      .clear()
  }
  if (identityProviderInfo.image) {
    cy.get('input[name=image]')
      .clear()
      .type(`${identityProviderInfo.image}`);
  } else if (identityProviderInfo.image === '') {
    cy.get('input[name=image]')
      .clear()
  }
  if (identityProviderInfo.imageFocus) {
    cy.get('input[name=imageFocus]')
      .clear()
      .type(`${identityProviderInfo.imageFocus}`);
  } else if (identityProviderInfo.imageFocus === '') {
    cy.get('input[name=imageFocus]')
      .clear()
  }
  if (identityProviderInfo.trustedIdentity) {
    cy.get('input[name=trustedIdentity]')
      .check(identityProviderInfo.trustedIdentity, { force: true });
  }
  if (identityProviderInfo.eidas) {
    cy.get('select[name=eidas]')
      .select(`${identityProviderInfo.eidas}`);
  }
  if (identityProviderInfo.order) {
    cy.get('input[name=order]')
      .clear()
      .type(`${identityProviderInfo.order}`);
  }
  if (identityProviderInfo.emails) {
    cy.get('textarea[name=emails]')
      .clear()
      .type(`${identityProviderInfo.emails}`);
  } else if (identityProviderInfo.emails === '') {
    cy.get('textarea[name=emails]')
      .clear()
  }
  if (identityProviderInfo.specificText) {
    cy.get('input[name=specificText]')
      .clear()
      .type(`${identityProviderInfo.specificText}`);
  } else if (identityProviderInfo.specificText === '') {
    cy.get('input[name=specificText]')
      .clear()
  }

  if (configuration.totp) {
    cy.get('input[name="_totp"]').then(totp => {
      const token = otplib.authenticator.generate(SECRET_TOTP);
      cy.get('input[name="_totp"]').type(token);
    });
  } else {
    cy.get('input[name="_totp"]').type('000000');
  }
}